{
  "stats": {
    "suites": 96,
    "tests": 221,
    "passes": 221,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-23T09:56:35.777Z",
    "end": "2022-06-23T10:13:52.170Z",
    "duration": 364045,
    "testsRegistered": 221,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4e1ad285-3828-4db0-9202-6b333fd38e84",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\api-challenge.js",
      "file": "cypress\\e2e\\api testing\\api-challenge.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "108eecaf-f62d-450d-a404-3aee1513452b",
          "title": "Post, Get, Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a new comment",
              "fullTitle": "Post, Get, Delete Request Create a new comment",
              "timedOut": null,
              "duration": 625,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    body: randomCommentBody,\n    postId\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n  id = response.body.id;\n});",
              "err": {},
              "uuid": "9263adfd-2313-47d2-ac76-d5329d04eb16",
              "parentUUID": "108eecaf-f62d-450d-a404-3aee1513452b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Locate and assert the new comment",
              "fullTitle": "Post, Get, Delete Request Locate and assert the new comment",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastBodyText = response.body[response.body.length - 1].body;\n  expect(lastBodyText).to.eq(\"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\");\n});",
              "err": {},
              "uuid": "867260a1-a1a9-4cd9-ba20-bf10fe3adc78",
              "parentUUID": "108eecaf-f62d-450d-a404-3aee1513452b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the last comment",
              "fullTitle": "Post, Get, Delete Request Delete the last comment",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: `https://jsonplaceholder.typicode.com/posts/${id}`\n});",
              "err": {},
              "uuid": "f21870d5-8458-4914-8fa5-f6aabeb12a29",
              "parentUUID": "108eecaf-f62d-450d-a404-3aee1513452b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9263adfd-2313-47d2-ac76-d5329d04eb16",
            "867260a1-a1a9-4cd9-ba20-bf10fe3adc78",
            "f21870d5-8458-4914-8fa5-f6aabeb12a29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "05957206-f1ac-4879-bc08-f256102047d8",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\delete-request.js",
      "file": "cypress\\e2e\\api testing\\delete-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "090cf1fa-2e01-4bed-8557-2681d2dff0a7",
          "title": "Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete a post via /posts api",
              "fullTitle": "Delete Request Delete a post via /posts api",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\"\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "b636756b-9e6b-4940-a314-23888ac4e09c",
              "parentUUID": "090cf1fa-2e01-4bed-8557-2681d2dff0a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b636756b-9e6b-4940-a314-23888ac4e09c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 347,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cb27164c-3ac4-47a7-a811-a806be6e0562",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\get-request.js",
      "file": "cypress\\e2e\\api testing\\get-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "42fe12f0-dd1b-4337-8479-f74ba371de84",
          "title": "Get Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate status code of the /post api",
              "fullTitle": "Get Request Validate status code of the /post api",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "result = cy.request({\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).its(\"status\").should(\"eq\", 200);",
              "err": {},
              "uuid": "9db3dd17-6a5a-4c9a-bd4c-bf76dafceb10",
              "parentUUID": "42fe12f0-dd1b-4337-8479-f74ba371de84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate /post api contains the correct keys and values",
              "fullTitle": "Get Request Validate /post api contains the correct keys and values",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  headers: {\n    accept: \"application/json\"\n  }\n}).then((response) => {\n  let body = response.body;\n  expect(body[0]).has.property(\"title\", \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");\n  expect(body[1]).property(\"userId\").eq(1);\n  body.forEach((item) => {\n    expect(item).to.have.keys(\"userId\", \"id\", \"title\", \"body\");\n  });\n});",
              "err": {},
              "uuid": "e036b097-bbd0-4556-b93c-8a1e2b9603de",
              "parentUUID": "42fe12f0-dd1b-4337-8479-f74ba371de84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9db3dd17-6a5a-4c9a-bd4c-bf76dafceb10",
            "e036b097-bbd0-4556-b93c-8a1e2b9603de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 424,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "db0db5d0-1d98-4659-b85a-b25f01fd5047",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\post-request.js",
      "file": "cypress\\e2e\\api testing\\post-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cb5a571c-977c-4557-a67c-90f148f0bb73",
          "title": "Post Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new post via /post api",
              "fullTitle": "Post Request Create new post via /post api",
              "timedOut": null,
              "duration": 327,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    title: randomTitle,\n    author: \"bog\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "c32c991c-51dc-4d3d-bf99-d1078d29df35",
              "parentUUID": "cb5a571c-977c-4557-a67c-90f148f0bb73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate title of latest post",
              "fullTitle": "Post Request Validate title of latest post",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastPost = response.body[response.body.length - 1];\n  console.log(lastPost);\n  expect(lastPost.title).to.eq(\"at nam consequatur ea labore ea harum\");\n});",
              "err": {},
              "uuid": "a80f3234-4292-44cb-a205-827cd6805a0d",
              "parentUUID": "cb5a571c-977c-4557-a67c-90f148f0bb73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c32c991c-51dc-4d3d-bf99-d1078d29df35",
            "a80f3234-4292-44cb-a205-827cd6805a0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 479,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ea2563a5-4c00-451d-ae7c-09cef4c31642",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\update-request.js",
      "file": "cypress\\e2e\\api testing\\update-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "83dc6bbe-9c73-4fee-a36e-6293fbbddd0d",
          "title": "Update Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update an existing post via /post api",
              "fullTitle": "Update Request Update an existing post via /post api",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"PUT\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\",\n  body: {\n    title: \"Where is your plane?\",\n    author: \"Johny\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "5090d359-b8fd-4eeb-8862-7c1089177fdf",
              "parentUUID": "83dc6bbe-9c73-4fee-a36e-6293fbbddd0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5090d359-b8fd-4eeb-8862-7c1089177fdf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9a2bb6e7-29cd-421c-b921-c72a8123f1ba",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fffae4d4-c63a-49de-b04e-c2350170ab0a",
          "title": "Alias and invoke tutorial",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and invoke tutorial Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 2663,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".thumbnail\").as(\"productThumbnail\");\ncy.get(\"@productThumbnail\").find(\".oneprice\").invoke(\"text\").as(\"itemPrice\");\ncy.get(\"@productThumbnail\").find(\".pricenew\").invoke(\"text\").as(\"saleitemPrice\");\nlet totalProductsValue = 0;\ncy.get(\"@itemPrice\").then((priceText) => {\n  let nonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    nonSale += Number(el);\n  });\n  totalProductsValue = nonSale;\n  console.log(nonSale);\n});\ncy.get(\"@saleitemPrice\").then((priceText) => {\n  let isonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    isonSale += Number(el);\n  });\n  totalProductsValue += isonSale;\n  console.log(isonSale);\n}).then(() => {\n  cy.log(\"Total price of all products is: \", totalProductsValue);\n  expect(totalProductsValue).to.equal(648.5);\n});",
              "err": {},
              "uuid": "fabfbbb3-0186-4a9f-be91-6fdb7e3d8712",
              "parentUUID": "fffae4d4-c63a-49de-b04e-c2350170ab0a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fabfbbb3-0186-4a9f-be91-6fdb7e3d8712"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2663,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec8e868b-3eac-4255-85a9-d63790d5963b",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "file": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2aee68e5-33dc-40bc-b1c4-7a70c89548e5",
          "title": "Test Contact-Us form via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a succesful submission via the contacts us form",
              "fullTitle": "Test Contact-Us form via Automation Test Store Should be able to submit a succesful submission via the contacts us form",
              "timedOut": null,
              "duration": 5169,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#footer > footer > section.footerlinks > div > div.pull-left > div > ul > li:nth-child(5) > a\").click().then((item) => {\n  cy.log(item.text());\n});\ncy.get(\"@user\").then((user) => {\n  cy.get(\"#ContactUsFrm_first_name\").type(user.first_name);\n  cy.get(\"#ContactUsFrm_email\").type(user.email);\n});\ncy.get(\"#ContactUsFrm_email\").should(\"have.attr\", \"name\", \"email\");\ncy.get(\"#ContactUsFrm_enquiry\").type(\"Can you provide some discount to nice consumers?\");\ncy.get(\".col-md-6 > .btn\").click();\ncy.get(\".mb40 > :nth-child(3)\").should(\"have.text\", \"Your enquiry has been successfully sent to the store owner!\");",
              "err": {},
              "uuid": "c8eb7cef-9a36-479c-a40b-585e7f40bf98",
              "parentUUID": "2aee68e5-33dc-40bc-b1c4-7a70c89548e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8eb7cef-9a36-479c-a40b-585e7f40bf98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5169,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cc4eb256-a1ee-4530-9618-996c29e75f7e",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "file": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "acee3f0b-4496-45ac-9c17-50499fbef5f8",
          "title": "Insepct Automation Test Store using chain of commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click on the first item using item header",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using item header",
              "timedOut": null,
              "duration": 2063,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".prdocutname\").contains(\"Skinsheen Bronzer Stick\").click();",
              "err": {},
              "uuid": "c26bf98b-808e-46c2-8ada-26d69651629f",
              "parentUUID": "acee3f0b-4496-45ac-9c17-50499fbef5f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using text",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using text",
              "timedOut": null,
              "duration": 1490,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".prdocutname\").contains(\"Skinsheen Bronzer Stick\").click().then((itemText) => {\n  console.log(\"The following item is selected \", itemText.text());\n});",
              "err": {},
              "uuid": "b8cb41b4-3a42-4382-b496-252b479a9bfd",
              "parentUUID": "acee3f0b-4496-45ac-9c17-50499fbef5f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using index",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using index",
              "timedOut": null,
              "duration": 706,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".fixed_wrapper\").find(\".prdocutname\").eq(0);",
              "err": {},
              "uuid": "6ecf1995-a762-4811-8fd4-61a19fbfd26b",
              "parentUUID": "acee3f0b-4496-45ac-9c17-50499fbef5f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c26bf98b-808e-46c2-8ada-26d69651629f",
            "b8cb41b4-3a42-4382-b496-252b479a9bfd",
            "6ecf1995-a762-4811-8fd4-61a19fbfd26b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4259,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a91ec81b-0ef7-4680-a321-e70274384285",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\iterate-over-elements.js",
      "file": "cypress\\e2e\\automation-test-store\\iterate-over-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3116327c-b9e9-4e52-a7d1-8f55e6d6aa3d",
          "title": "Iterate over element",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log information of all Hair care product",
              "fullTitle": "Iterate over element Log information of all Hair care product",
              "timedOut": null,
              "duration": 2799,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".fixed_wrapper .prdocutname\").each((el, index, list) => {\n  cy.log(index, \" : \", el.text());\n});",
              "err": {},
              "uuid": "f17094e1-758f-4a4e-b54f-af205e9fe1cd",
              "parentUUID": "3116327c-b9e9-4e52-a7d1-8f55e6d6aa3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add specific product to basket",
              "fullTitle": "Iterate over element Add specific product to basket",
              "timedOut": null,
              "duration": 1250,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Eau Parfumee au The Vert Shampoo\");",
              "err": {},
              "uuid": "85513e6e-9a2a-4b76-8ee2-0397bafa3290",
              "parentUUID": "3116327c-b9e9-4e52-a7d1-8f55e6d6aa3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over element Add another specific product to basket",
              "timedOut": null,
              "duration": 1405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Seaweed Conditioner\");",
              "err": {},
              "uuid": "61102698-33cd-438a-897d-2e2894530600",
              "parentUUID": "3116327c-b9e9-4e52-a7d1-8f55e6d6aa3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add one more product to basket",
              "fullTitle": "Iterate over element Add one more product to basket",
              "timedOut": null,
              "duration": 1426,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Eau Parfumee au The Vert Shampoo\");",
              "err": {},
              "uuid": "153f4376-07b6-42b0-bb6c-db5cc3a355b2",
              "parentUUID": "3116327c-b9e9-4e52-a7d1-8f55e6d6aa3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f17094e1-758f-4a4e-b54f-af205e9fe1cd",
            "85513e6e-9a2a-4b76-8ee2-0397bafa3290",
            "61102698-33cd-438a-897d-2e2894530600",
            "153f4376-07b6-42b0-bb6c-db5cc3a355b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6880,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "461fea3d-f5eb-458c-9005-6a547365b2b3",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "file": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e49a8275-7788-494f-b856-9ee5be58fab9",
          "title": "Verifying variables, cypress commands and jQuery commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate properties of the Contact Us page",
              "fullTitle": "Verifying variables, cypress commands and jQuery commands Validate properties of the Contact Us page",
              "timedOut": null,
              "duration": 1604,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/index.php?rt=content/contact\");\ncy.contains(\"#ContactUsFrm\", \"Contact Us Form\").find(\"#field_11\").should(\"contain\", \"First name\");\ncy.contains(\"#ContactUsFrm\", \"Contact Us Form\").then((divText) => {\n  const firstNameText = divText.find(\"#field_11\").text();\n  expect(firstNameText).to.contain(\"First name\");\n  cy.get(\"#field_11\").then((fnText) => {\n    cy.log(fnText.text());\n  });\n});",
              "err": {},
              "uuid": "71e220f4-a334-4ed5-bf6a-6774c654790e",
              "parentUUID": "e49a8275-7788-494f-b856-9ee5be58fab9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71e220f4-a334-4ed5-bf6a-6774c654790e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1604,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "317d89ee-62d0-4ace-88a0-e360131ac85f",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\Login.feature",
      "file": "cypress\\e2e\\features\\Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3cbe98af-b310-406d-9c71-404e5beabee4",
          "title": "WebdriverUniversity Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using valid credentials",
              "fullTitle": "WebdriverUniversity Login Page Login using valid credentials",
              "timedOut": null,
              "duration": 2817,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "f2945492-a980-49e7-852a-719eae6280d6",
              "parentUUID": "3cbe98af-b310-406d-9c71-404e5beabee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login using invalid credentials(password)",
              "fullTitle": "WebdriverUniversity Login Page Login using invalid credentials(password)",
              "timedOut": null,
              "duration": 883,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "b062c75a-76b1-40e8-b08a-9eb8c4f9060c",
              "parentUUID": "3cbe98af-b310-406d-9c71-404e5beabee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Login via Webdriveruniversity Login Portal (example #1)",
              "fullTitle": "WebdriverUniversity Login Page Test Login via Webdriveruniversity Login Portal (example #1)",
              "timedOut": null,
              "duration": 881,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "13435544-cd47-4a41-b29f-613cf8617cc2",
              "parentUUID": "3cbe98af-b310-406d-9c71-404e5beabee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Login via Webdriveruniversity Login Portal (example #2)",
              "fullTitle": "WebdriverUniversity Login Page Test Login via Webdriveruniversity Login Portal (example #2)",
              "timedOut": null,
              "duration": 874,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "47330a6c-59c9-4c40-b84a-72f19742ed59",
              "parentUUID": "3cbe98af-b310-406d-9c71-404e5beabee4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2945492-a980-49e7-852a-719eae6280d6",
            "b062c75a-76b1-40e8-b08a-9eb8c4f9060c",
            "13435544-cd47-4a41-b29f-613cf8617cc2",
            "47330a6c-59c9-4c40-b84a-72f19742ed59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "88e4a715-f3da-418e-82f0-3e9e28f97568",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\intercept.js",
      "file": "cypress\\e2e\\other\\intercept.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "809b02c8-acef-4a94-be37-2f7855a1e167",
          "title": "Use cy.intercept to spy or stub requests and responses",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Intercept the  request  and modify the response",
              "fullTitle": "Use cy.intercept to spy or stub requests and responses Intercept the  request  and modify the response",
              "timedOut": null,
              "duration": 4636,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://jsonplaceholder.typicode.com\");\ncy.intercept({ method: \"GET\", path: \"/posts\" }, (req) => {\n  req.on(\"before:response\", (res) => {\n  });\n  req.continue((res) => {\n    res.setThrottle(1e3);\n    res.setDelay(2e3);\n    console.log(res);\n  });\n}).as(\"posts\");\ncy.get(\"table:nth-of-type(1) a[href='/posts']\").click();\ncy.wait(\"@posts\").then((intercept) => {\n  console.log(intercept.response);\n});",
              "err": {},
              "uuid": "45907f1c-d9f0-4a69-8885-30a177b31ec4",
              "parentUUID": "809b02c8-acef-4a94-be37-2f7855a1e167",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45907f1c-d9f0-4a69-8885-30a177b31ec4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4636,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b888bb2a-0506-4f1c-8a2e-9e339ed83c9d",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\qaclickacademy.js",
      "file": "cypress\\e2e\\other\\qaclickacademy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1291604f-83cb-443d-9138-af4a7697dfe4",
          "title": "Practice testing on qaclickcademy.com practice site",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify that radio buttons, autocomplete, dropdown menu and checkboxes can be used",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify that radio buttons, autocomplete, dropdown menu and checkboxes can be used",
              "timedOut": null,
              "duration": 6349,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[for=\"radio1\"]').children().check().should(\"be.checked\");\ncy.get('input[value=\"radio2\"]').check().should(\"be.checked\");\ncy.get(\"label\").find('[value=\"radio3\"]').first().check().should(\"be.checked\");\ncy.get('[placeholder=\"Type to Select Countries\"]').type(\"ro\").then(() => {\n  cy.get(\"#ui-id-1\").each((el, idx, list) => {\n    cy.contains(\"Romania\").click().then(() => {\n      cy.get(\"#autocomplete\").should(\"have.value\", \"Romania\");\n    });\n  });\n});\ncy.get(\"#dropdown-class-example\").select(\"option3\").should(\"have.value\", \"option3\");\ncy.get(\"#checkbox-example fieldset label>input\").check().should(\"be.checked\");",
              "err": {},
              "uuid": "17d7da96-2287-4052-bc64-2aedcc8cb3f0",
              "parentUUID": "1291604f-83cb-443d-9138-af4a7697dfe4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that new tab link works",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify that new tab link works",
              "timedOut": null,
              "duration": 2464,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#opentab\").invoke(\"attr\", \"target\", \"_self\").click().then(() => {\n  cy.url().should(\"eq\", \"https://www.rahulshettyacademy.com/\");\n});",
              "err": {},
              "uuid": "3f56475e-9043-4b76-aab6-6ad137f5c673",
              "parentUUID": "1291604f-83cb-443d-9138-af4a7697dfe4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify alert and confirm pop-ups",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify alert and confirm pop-ups",
              "timedOut": null,
              "duration": 1971,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#name\").type(\"Bogdan\");\ncy.get(\"#alertbtn\").click();\ncy.on(\"window:alert\", (message) => {\n  expect(message).to.equal(\"Hello Bogdan, share this practice page and share your knowledge\");\n});\ncy.get(\"#name\").type(\"Bogdan\");\ncy.get(\"#confirmbtn\").click();\ncy.on(\"window:confirm\", (message) => {\n  expect(message).to.equal(\"Hello Bogdan, Are you sure you want to confirm?\");\n  return true;\n});",
              "err": {},
              "uuid": "bb1159ed-bd4d-4889-b35e-75ca84b9df06",
              "parentUUID": "1291604f-83cb-443d-9138-af4a7697dfe4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Traverse table",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Traverse table",
              "timedOut": null,
              "duration": 1505,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#product td\").contains(\"Bugzilla\").next().should(\"have.text\", \"25\");\ncy.get(\"#product td\").contains(\"Resume\").siblings().parentsUntil(\"fieldset\").should(\"have.length\", 3);",
              "err": {},
              "uuid": "3d0df240-22d2-44e4-a28f-66c1a36e08fe",
              "parentUUID": "1291604f-83cb-443d-9138-af4a7697dfe4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check visibility of input",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Check visibility of input",
              "timedOut": null,
              "duration": 3905,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"legend\").contains(\"Element Displayed Example\").siblings(\"#displayed-text\").type(\"Bogdan\").should(\"be.visible\").and(\"have.value\", \"Bogdan\");\ncy.get(\"#hide-textbox\").click().then(() => {\n  cy.get(\"#displayed-text\").should(\"not.be.visible\").and(\"have.css\", \"display\", \"none\");\n});",
              "err": {},
              "uuid": "acdc6ef8-014d-4c13-9b90-ab1edaa12a57",
              "parentUUID": "1291604f-83cb-443d-9138-af4a7697dfe4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sum all the values from the Amount column and verify it ",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Sum all the values from the Amount column and verify it ",
              "timedOut": null,
              "duration": 1031,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let totalSum = 0;\ncy.get(\".tableFixHead #product td:last-child\").each((el) => {\n  const value = parseInt(el.text());\n  totalSum += value;\n});\ncy.get(\".totalAmount\").then((el) => {\n  let numberFromText = parseInt(el.text().match(/\\d/g).join(\"\"));\n  expect(numberFromText).to.equal(totalSum);\n});",
              "err": {},
              "uuid": "87f9d6bd-1677-4d6a-ae1a-a4fd21555213",
              "parentUUID": "1291604f-83cb-443d-9138-af4a7697dfe4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hover over element",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Hover over element",
              "timedOut": null,
              "duration": 2576,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#mousehover\").trigger(\"mouseover\").then(() => {\n  cy.contains(\"Top\").click({ force: true });\n  cy.location(\"hash\").should(\"include\", \"#top\");\n});\ncy.get(\"#mousehover\").trigger(\"mouseover\").siblings().children().contains(\"Reload\").click({ force: true });\ncy.url().should(\"eq\", \"https://www.rahulshettyacademy.com/AutomationPractice/\");",
              "err": {},
              "uuid": "773caa69-caa5-4536-b129-9c6d9bf06f87",
              "parentUUID": "1291604f-83cb-443d-9138-af4a7697dfe4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test iframe",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Test iframe",
              "timedOut": null,
              "duration": 1443,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#courses-iframe\").then(($iframe) => {\n  const body = $iframe.contents().find(\"body\");\n  cy.wrap(body).as(\"iframe\").find('[href=\"https://rahulshettyacademy.com/blog/\"]').last().click({ force: true }).then(($iframe2) => {\n    expect($iframe2[0].innerHTML).to.include(\"Blog\");\n  });\n});",
              "err": {},
              "uuid": "82f833d3-86da-4bde-8ba5-ffec1b48aa3e",
              "parentUUID": "1291604f-83cb-443d-9138-af4a7697dfe4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17d7da96-2287-4052-bc64-2aedcc8cb3f0",
            "3f56475e-9043-4b76-aab6-6ad137f5c673",
            "bb1159ed-bd4d-4889-b35e-75ca84b9df06",
            "3d0df240-22d2-44e4-a28f-66c1a36e08fe",
            "acdc6ef8-014d-4c13-9b90-ab1edaa12a57",
            "87f9d6bd-1677-4d6a-ae1a-a4fd21555213",
            "773caa69-caa5-4536-b129-9c6d9bf06f87",
            "82f833d3-86da-4bde-8ba5-ffec1b48aa3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "db85d7c9-4f84-43e8-be52-65f652c623a3",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\request.js",
      "file": "cypress\\e2e\\other\\request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67efe31c-5ecb-4858-86dd-9d8d7c291f18",
          "title": "Use cy.request to make API requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in autoTestStore with request only and check if customer cookie exists",
              "fullTitle": "Use cy.request to make API requests Login in autoTestStore with request only and check if customer cookie exists",
              "timedOut": null,
              "duration": 2774,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"https://automationteststore.com/index.php?rt=account/login\").its(\"body\").then((body) => {\n  const $html = Cypress.$(body);\n  let csrftoken, csrfinstance;\n  csrfinstance = $html.find(\"#loginFrm input[name=csrfinstance]\").val();\n  csrftoken = $html.find(\"#loginFrm input[name=csrftoken]\").val();\n  console.log(csrfinstance, csrftoken);\n  cy.request({\n    method: \"POST\",\n    url: \"https://automationteststore.com/index.php?rt=account/login\",\n    form: true,\n    body: {\n      csrftoken,\n      csrfinstance,\n      loginname: \"webdriveruni\",\n      password: \"webdriveruni\"\n    }\n  }).then((el) => {\n    console.log(el);\n  });\n});\ncy.visit(\"https://automationteststore.com/\");\ncy.getCookie(\"customer\").should(\"exist\");",
              "err": {},
              "uuid": "c536c654-0ec3-4dd7-9362-e9b6319277cf",
              "parentUUID": "67efe31c-5ecb-4858-86dd-9d8d7c291f18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c536c654-0ec3-4dd7-9362-e9b6319277cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2774,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f8a3ad3c-d8b6-4347-a675-b161d94f2723",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\same-origin-policy.js",
      "file": "cypress\\e2e\\other\\same-origin-policy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f79b179-6180-4dfc-8757-008c647c69b8",
          "title": "Cypress web security",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Use cy.origin  to visit different super-domains",
              "fullTitle": "Cypress web security Use cy.origin  to visit different super-domains",
              "timedOut": null,
              "duration": 5275,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com/\");\ncy.get(\"#dropdown-checkboxes-radiobuttons\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.origin(\"https://automationteststore.com/\", () => {\n  cy.visit(\"https://automationteststore.com/\");\n  cy.url().should(\"eq\", \"https://automationteststore.com/\");\n});",
              "err": {},
              "uuid": "e8365520-8ecb-4a29-859a-548974c39cbf",
              "parentUUID": "9f79b179-6180-4dfc-8757-008c647c69b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8365520-8ecb-4a29-859a-548974c39cbf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5275,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d736adb9-f2a4-495d-b4df-bc9fec6b0483",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\sessions.js",
      "file": "cypress\\e2e\\other\\sessions.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ab59626e-5fd1-4318-89c9-5fe6f012f326",
          "title": "Test sessions  via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to record sessions for test1 ",
              "fullTitle": "Test sessions  via Automation Test Store Should be able to record sessions for test1 ",
              "timedOut": null,
              "duration": 6156,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart\").click();\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();",
              "err": {},
              "uuid": "d8edf29e-27fe-4524-8341-435341035b2b",
              "parentUUID": "ab59626e-5fd1-4318-89c9-5fe6f012f326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to record sessions for this test2 ",
              "fullTitle": "Test sessions  via Automation Test Store Should be able to record sessions for this test2 ",
              "timedOut": null,
              "duration": 2237,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart\").click();\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();",
              "err": {},
              "uuid": "9eefe105-ad9d-4b0b-888c-91f36bf6ea5b",
              "parentUUID": "ab59626e-5fd1-4318-89c9-5fe6f012f326",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test3",
              "fullTitle": "Test sessions  via Automation Test Store Test3",
              "timedOut": null,
              "duration": 8631,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\"#block_frame_bestsellers_1771 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\".cart\").click();\ncy.get(\":nth-child(1) > .active\").click();\ncy.get(\"#block_frame_special_1772 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\".cart\").click();\ncy.get(\".col-md-6 > .btn-default\").click();\ncy.get(\".nav-pills > :nth-child(1) > .active\").click();",
              "err": {},
              "uuid": "cc31f11f-39fb-48ed-a520-ea8a19204fbd",
              "parentUUID": "ab59626e-5fd1-4318-89c9-5fe6f012f326",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8edf29e-27fe-4524-8341-435341035b2b",
            "9eefe105-ad9d-4b0b-888c-91f36bf6ea5b",
            "cc31f11f-39fb-48ed-a520-ea8a19204fbd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17024,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "93ece06d-359e-4263-bf1d-b4c3524eaf7f",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\spyStub.js",
      "file": "cypress\\e2e\\other\\spyStub.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f45c3972-bb22-41a5-afad-ec4ed9bc065d",
          "title": "Test  spys and stubs ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Stub on a function and its return value ",
              "fullTitle": "Test  spys and stubs  Stub on a function and its return value ",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const logging = {\n  clg(message) {\n    cy.log(\"Hi there \" + message);\n    return 5;\n  }\n};\nconst stub = cy.stub(logging, \"clg\").callsFake((args) => {\n  cy.log(\"hello \" + args);\n  return 20;\n}).as(\"stubLog\");\nlogging.clg(\"bbog\");\nexpect(logging.clg).to.have.returned(20);",
              "err": {},
              "uuid": "369d9481-df2a-4b9e-919b-0558729ab1be",
              "parentUUID": "f45c3972-bb22-41a5-afad-ec4ed9bc065d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "369d9481-df2a-4b9e-919b-0558729ab1be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15a7238b-5001-4648-9ad1-2928ba7605ed",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33021505-0967-46c3-b4f6-5a3cdfb3a5e4",
          "title": "Verify autocomplete dropdown list via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific product via autocomplete list",
              "fullTitle": "Verify autocomplete dropdown list via webdriveruni Select specific product via autocomplete list",
              "timedOut": null,
              "duration": 2235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#autocomplete-textfield\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#myInput\").type(\"A\");\ncy.get(\"#myInputautocomplete-list > *\").each(($el, index, $list) => {\n  const prod = $el.text();\n  const productToSelect = \"Avacado\";\n  if (prod === productToSelect) {\n    $el.trigger(\"click\");\n    cy.get(\"#submit-button\").click();\n    cy.url().should(\"include\", productToSelect);\n  }\n}).then((el) => {\n  console.log(el);\n  cy.get(\"#myInput\").type(\"G\");\n  cy.get(\"#myInputautocomplete-list > *\").each(($el, index, $list) => {\n    const prod = $el.text();\n    const productToSelect = \"Grapes\";\n    if (prod === productToSelect) {\n      $el.trigger(\"click\");\n      cy.get(\"#submit-button\").click();\n      cy.url().should(\"include\", productToSelect);\n    }\n  });\n});",
              "err": {},
              "uuid": "5cd72f5b-ce7c-41ee-925e-748caac15b0a",
              "parentUUID": "33021505-0967-46c3-b4f6-5a3cdfb3a5e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cd72f5b-ce7c-41ee-925e-748caac15b0a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "205f79e0-8356-4a68-965d-9ee9beed2d18",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "file": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d20c3412-503d-46ca-bee3-3fc82ad6c6cb",
          "title": "Validate Webdriveruni homepage links",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should redirect to the correct pages",
              "fullTitle": "Validate Webdriveruni homepage links Should redirect to the correct pages",
              "timedOut": null,
              "duration": 5329,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#contact-us\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"contactus\");\ncy.go(\"back\");\ncy.reload(true);\ncy.url().should(\"include\", \"https://webdriveruniversity.com\");\ncy.go(\"forward\");\ncy.url().should(\"include\", \"contactus\");\ncy.go(\"back\");\ncy.get(\"#login-portal\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"Login-Portal\");\ncy.go(\"back\");\ncy.get(\"#to-do-list\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"To-Do-List\");\ncy.go(\"back\");",
              "err": {},
              "uuid": "d3b6f428-db87-4b2c-a83d-298c1f3b5e20",
              "parentUUID": "d20c3412-503d-46ca-bee3-3fc82ad6c6cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3b6f428-db87-4b2c-a83d-298c1f3b5e20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b8a3068f-9ab3-49c7-815d-4cff06f96e7e",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\checkboxes.js",
      "file": "cypress\\e2e\\webdriver-uni\\checkboxes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2773b82f-0ea8-48f8-be24-e329f186dd6b",
          "title": "Verify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#checkboxes > :nth-child(1) > input\").as(\"option-1\");\ncy.get(\"@option-1\").check().should(\"be.checked\");",
              "err": {},
              "uuid": "633c9ce7-e763-42f8-a9e3-d4b136c129f2",
              "parentUUID": "2773b82f-0ea8-48f8-be24-e329f186dd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Uncheck and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Uncheck and validate checkbox",
              "timedOut": null,
              "duration": 334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\":nth-child(5) > input\").as(\"option-3\");\ncy.get(\"@option-3\").uncheck().should(\"not.be.checked\");",
              "err": {},
              "uuid": "e5ade3ff-4a10-46ec-9834-bbdb0fb7bcd2",
              "parentUUID": "2773b82f-0ea8-48f8-be24-e329f186dd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check multiple checkboxs",
              "fullTitle": "Verify checkboxes via webdriveruni Check multiple checkboxs",
              "timedOut": null,
              "duration": 604,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type = 'checkbox']\").check([\"option-1\", \"option-2\", \"option-3\", \"option-4\"]).should(\"be.checked\");",
              "err": {},
              "uuid": "5d87589e-1bb2-421c-a44e-f096098bce3f",
              "parentUUID": "2773b82f-0ea8-48f8-be24-e329f186dd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cypress-studio-test",
              "fullTitle": "Verify checkboxes via webdriveruni cypress-studio-test",
              "timedOut": null,
              "duration": 902,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[value=\"green\"]').check();\ncy.get('[value=\"blue\"]').check();\ncy.get('[value=\"yellow\"]').check();\ncy.get('#radio-buttons > [value=\"orange\"]').check();\ncy.get('[value=\"purple\"]').check();",
              "err": {},
              "uuid": "48746f1e-c516-46fc-a76a-c38153d21803",
              "parentUUID": "2773b82f-0ea8-48f8-be24-e329f186dd6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "633c9ce7-e763-42f8-a9e3-d4b136c129f2",
            "e5ade3ff-4a10-46ec-9834-bbdb0fb7bcd2",
            "5d87589e-1bb2-421c-a44e-f096098bce3f",
            "48746f1e-c516-46fc-a76a-c38153d21803"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2568,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3bf7586b-2ed0-464b-b154-073876a71e56",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\contact-us.spec.js",
      "file": "cypress\\e2e\\webdriver-uni\\contact-us.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cc1dac62-e244-401c-801d-a8b987f8b3b2",
          "title": "test Contact us form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a succesful submission via the contacts us form",
              "fullTitle": "test Contact us form via WebdriverUni Should be able to submit a succesful submission via the contacts us form",
              "timedOut": null,
              "duration": 3027,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should(\"have.property\", \"charset\").and(\"eq\", \"UTF-8\");\ncy.title().should(\"include\", \"WebDriver | Contact Us\");\ncy.url().should(\"include\", \"contactus\");\ncontact_Us_PO.contactForm_Submission(this.data.first_name, this.data.last_name, this.data.email, \"Hi there\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "1da407b3-2a9c-45fd-8ca5-d56559803236",
              "parentUUID": "cc1dac62-e244-401c-801d-a8b987f8b3b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a succesful submission via the contacts us form as all fields are required",
              "fullTitle": "test Contact us form via WebdriverUni Should not be able to submit a succesful submission via the contacts us form as all fields are required",
              "timedOut": null,
              "duration": 2442,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contact_Us_PO.contactForm_Submission(this.data.first_name, this.data.last_name, this.data.email, \"Hi there\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "8eb94a37-4943-46e8-94f4-788a6e900177",
              "parentUUID": "cc1dac62-e244-401c-801d-a8b987f8b3b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1da407b3-2a9c-45fd-8ca5-d56559803236",
            "8eb94a37-4943-46e8-94f4-788a6e900177"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5469,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3b453452-24b3-402a-94d1-e807e1d00bdb",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "file": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a1e6849-e3a5-4016-bbde-16a9dc26f063",
          "title": "Handling data via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate and assert the  age of a given use based on last name",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the  age of a given use based on last name",
              "timedOut": null,
              "duration": 1599,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#thumbnail-1 tr td:nth-child(2)\").each((el) => {\n  if (el.text().includes(\"Woods\")) {\n    expect(el.next().text()).to.equal(\"80\");\n  }\n});",
              "err": {},
              "uuid": "0585224f-3cd2-42a4-af34-b418f708412c",
              "parentUUID": "7a1e6849-e3a5-4016-bbde-16a9dc26f063",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0585224f-3cd2-42a4-af34-b418f708412c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1599,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c8218bac-c27c-47a6-858d-83fe14c87a5e",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\date-picker.js",
      "file": "cypress\\e2e\\webdriver-uni\\date-picker.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "862cf1c8-07a9-43a6-806b-7c2676e11255",
          "title": "Test datepicker via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select date from the datepicker",
              "fullTitle": "Test datepicker via webdriveruni Select date from the datepicker",
              "timedOut": null,
              "duration": 2204,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://webdriveruniversity.com/\");\ncy.get(\"#datepicker\").invoke(\"removeAttr\", \"target\").click({ force: true });\ncy.get(\"#datepicker\").click();\nlet date = new Date();\ndate.setDate(date.getDate() + 71);\nlet futureYear = date.getFullYear();\nlet futureMonth = date.toLocaleString(\"default\", { month: \"long\" });\nlet futureDay = date.getDate();\ncy.log(futureDay + futureMonth + futureYear);\nfunction selectMonthAndYear() {\n  cy.get(\".datepicker-dropdown\").find(\".datepicker-switch\").first().then((currDate) => {\n    if (!currDate.text().includes(futureYear)) {\n      cy.get(\".next\").first().click();\n      selectMonthAndYear();\n    }\n  }).then(() => {\n    cy.get(\".datepicker-dropdown\").find(\".datepicker-switch\").first().then((currDate) => {\n      if (!currDate.text().includes(futureMonth)) {\n        cy.get(\".next\").first().click();\n        selectMonthAndYear();\n      }\n    });\n  });\n}\nfunction selectFutureDay() {\n  cy.get(\"[class=day]\").contains(futureDay).click();\n}\nselectMonthAndYear();\nselectFutureDay();",
              "err": {},
              "uuid": "8b97352e-5981-4c6c-8f7e-6e0ebb12a6a7",
              "parentUUID": "862cf1c8-07a9-43a6-806b-7c2676e11255",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b97352e-5981-4c6c-8f7e-6e0ebb12a6a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2204,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cb0f6023-4b22-4537-b295-30ad4fe06f40",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\api-challenge.js",
      "file": "cypress\\e2e\\api testing\\api-challenge.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bbff6bf2-d24c-4427-94b3-b83584e2f311",
          "title": "Post, Get, Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a new comment",
              "fullTitle": "Post, Get, Delete Request Create a new comment",
              "timedOut": null,
              "duration": 639,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    body: randomCommentBody,\n    postId\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n  id = response.body.id;\n});",
              "err": {},
              "uuid": "50230e6e-543d-49e1-9c99-20cbc4bb7630",
              "parentUUID": "bbff6bf2-d24c-4427-94b3-b83584e2f311",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Locate and assert the new comment",
              "fullTitle": "Post, Get, Delete Request Locate and assert the new comment",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastBodyText = response.body[response.body.length - 1].body;\n  expect(lastBodyText).to.eq(\"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\");\n});",
              "err": {},
              "uuid": "6afa0c50-0421-4f2a-9865-19ecc5bfb4d6",
              "parentUUID": "bbff6bf2-d24c-4427-94b3-b83584e2f311",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the last comment",
              "fullTitle": "Post, Get, Delete Request Delete the last comment",
              "timedOut": null,
              "duration": 316,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: `https://jsonplaceholder.typicode.com/posts/${id}`\n});",
              "err": {},
              "uuid": "c7653ebe-900d-49be-9e41-8009796e73d8",
              "parentUUID": "bbff6bf2-d24c-4427-94b3-b83584e2f311",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50230e6e-543d-49e1-9c99-20cbc4bb7630",
            "6afa0c50-0421-4f2a-9865-19ecc5bfb4d6",
            "c7653ebe-900d-49be-9e41-8009796e73d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1172,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e4edbde3-97ff-4b69-a06a-95e7e78a0eb7",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\delete-request.js",
      "file": "cypress\\e2e\\api testing\\delete-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d90848a8-3e43-4ffa-b34c-a77a8ad91b90",
          "title": "Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete a post via /posts api",
              "fullTitle": "Delete Request Delete a post via /posts api",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\"\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "b0829157-b95a-4fbd-af40-37f3f9cc09d8",
              "parentUUID": "d90848a8-3e43-4ffa-b34c-a77a8ad91b90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0829157-b95a-4fbd-af40-37f3f9cc09d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 330,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5b7a7613-1b92-4d4d-bce6-244bc9a5b681",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\get-request.js",
      "file": "cypress\\e2e\\api testing\\get-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b395b64-09b7-48a0-ac8e-1bd7749703e7",
          "title": "Get Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate status code of the /post api",
              "fullTitle": "Get Request Validate status code of the /post api",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "result = cy.request({\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).its(\"status\").should(\"eq\", 200);",
              "err": {},
              "uuid": "fb091fd8-c6a1-4ac8-b680-ecd29fd0c893",
              "parentUUID": "9b395b64-09b7-48a0-ac8e-1bd7749703e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate /post api contains the correct keys and values",
              "fullTitle": "Get Request Validate /post api contains the correct keys and values",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  headers: {\n    accept: \"application/json\"\n  }\n}).then((response) => {\n  let body = response.body;\n  expect(body[0]).has.property(\"title\", \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");\n  expect(body[1]).property(\"userId\").eq(1);\n  body.forEach((item) => {\n    expect(item).to.have.keys(\"userId\", \"id\", \"title\", \"body\");\n  });\n});",
              "err": {},
              "uuid": "092d560e-4882-4ee1-a8f7-9d31db5745ea",
              "parentUUID": "9b395b64-09b7-48a0-ac8e-1bd7749703e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb091fd8-c6a1-4ac8-b680-ecd29fd0c893",
            "092d560e-4882-4ee1-a8f7-9d31db5745ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 439,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ef15cf4a-83e9-42a8-a6fb-ba2fa97a3d0c",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\post-request.js",
      "file": "cypress\\e2e\\api testing\\post-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7f68c85-c76e-4983-a2f4-dc4cc5cc0aa9",
          "title": "Post Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new post via /post api",
              "fullTitle": "Post Request Create new post via /post api",
              "timedOut": null,
              "duration": 336,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    title: randomTitle,\n    author: \"bog\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "e80f29a9-c73e-4b77-805f-d68f9d32034e",
              "parentUUID": "a7f68c85-c76e-4983-a2f4-dc4cc5cc0aa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate title of latest post",
              "fullTitle": "Post Request Validate title of latest post",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastPost = response.body[response.body.length - 1];\n  console.log(lastPost);\n  expect(lastPost.title).to.eq(\"at nam consequatur ea labore ea harum\");\n});",
              "err": {},
              "uuid": "198e11ec-6fcf-40bc-b27d-721624ceb82b",
              "parentUUID": "a7f68c85-c76e-4983-a2f4-dc4cc5cc0aa9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e80f29a9-c73e-4b77-805f-d68f9d32034e",
            "198e11ec-6fcf-40bc-b27d-721624ceb82b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 449,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aa435abf-7c0c-47cc-ad10-e65b15c2488a",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\update-request.js",
      "file": "cypress\\e2e\\api testing\\update-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3702b076-5e6f-4b5e-a888-8f87ea3e7a6c",
          "title": "Update Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update an existing post via /post api",
              "fullTitle": "Update Request Update an existing post via /post api",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"PUT\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\",\n  body: {\n    title: \"Where is your plane?\",\n    author: \"Johny\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "8a5ffd8f-f2c8-4723-9708-0b6c8148e5d6",
              "parentUUID": "3702b076-5e6f-4b5e-a888-8f87ea3e7a6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a5ffd8f-f2c8-4723-9708-0b6c8148e5d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 347,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f7d1867e-c382-4326-9139-20a9d70383a1",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "871709e7-c568-4f4d-a9bf-9bae2c31c0c4",
          "title": "Alias and invoke tutorial",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and invoke tutorial Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 2416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".thumbnail\").as(\"productThumbnail\");\ncy.get(\"@productThumbnail\").find(\".oneprice\").invoke(\"text\").as(\"itemPrice\");\ncy.get(\"@productThumbnail\").find(\".pricenew\").invoke(\"text\").as(\"saleitemPrice\");\nlet totalProductsValue = 0;\ncy.get(\"@itemPrice\").then((priceText) => {\n  let nonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    nonSale += Number(el);\n  });\n  totalProductsValue = nonSale;\n  console.log(nonSale);\n});\ncy.get(\"@saleitemPrice\").then((priceText) => {\n  let isonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    isonSale += Number(el);\n  });\n  totalProductsValue += isonSale;\n  console.log(isonSale);\n}).then(() => {\n  cy.log(\"Total price of all products is: \", totalProductsValue);\n  expect(totalProductsValue).to.equal(648.5);\n});",
              "err": {},
              "uuid": "56a7d255-3b83-4002-97da-f491f7634606",
              "parentUUID": "871709e7-c568-4f4d-a9bf-9bae2c31c0c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56a7d255-3b83-4002-97da-f491f7634606"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2416,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "74da9380-33e0-46d8-96cc-874165245a08",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\api-challenge.js",
      "file": "cypress\\e2e\\api testing\\api-challenge.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d0ed2a7-f12b-44a7-9df9-87f7ae501149",
          "title": "Post, Get, Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a new comment",
              "fullTitle": "Post, Get, Delete Request Create a new comment",
              "timedOut": null,
              "duration": 536,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    body: randomCommentBody,\n    postId\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n  id = response.body.id;\n});",
              "err": {},
              "uuid": "6c4ff063-6607-4ecc-a7f2-cd38460eacb0",
              "parentUUID": "9d0ed2a7-f12b-44a7-9df9-87f7ae501149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Locate and assert the new comment",
              "fullTitle": "Post, Get, Delete Request Locate and assert the new comment",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastBodyText = response.body[response.body.length - 1].body;\n  expect(lastBodyText).to.eq(\"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\");\n});",
              "err": {},
              "uuid": "ec7ea8ad-9f7c-4724-b647-563b56caedcb",
              "parentUUID": "9d0ed2a7-f12b-44a7-9df9-87f7ae501149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the last comment",
              "fullTitle": "Post, Get, Delete Request Delete the last comment",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: `https://jsonplaceholder.typicode.com/posts/${id}`\n});",
              "err": {},
              "uuid": "22cad7e1-6e36-46dc-9ffb-13adf56863e5",
              "parentUUID": "9d0ed2a7-f12b-44a7-9df9-87f7ae501149",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c4ff063-6607-4ecc-a7f2-cd38460eacb0",
            "ec7ea8ad-9f7c-4724-b647-563b56caedcb",
            "22cad7e1-6e36-46dc-9ffb-13adf56863e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1006,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "50b72fb1-5921-4d32-b785-3bd050188593",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\delete-request.js",
      "file": "cypress\\e2e\\api testing\\delete-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2914dd6-9c0d-4fb8-bedb-2416c8e31222",
          "title": "Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete a post via /posts api",
              "fullTitle": "Delete Request Delete a post via /posts api",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\"\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "ad8c9be9-e610-4b94-91bc-a802e181bd3f",
              "parentUUID": "a2914dd6-9c0d-4fb8-bedb-2416c8e31222",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad8c9be9-e610-4b94-91bc-a802e181bd3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "96587fca-596d-43b4-8fc0-bdacb476ea17",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\get-request.js",
      "file": "cypress\\e2e\\api testing\\get-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f41145f5-1f6f-44e8-a259-0e9f5df1928f",
          "title": "Get Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate status code of the /post api",
              "fullTitle": "Get Request Validate status code of the /post api",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "result = cy.request({\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).its(\"status\").should(\"eq\", 200);",
              "err": {},
              "uuid": "98cef04b-d2d2-47ed-9c1f-1d346ba828a3",
              "parentUUID": "f41145f5-1f6f-44e8-a259-0e9f5df1928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate /post api contains the correct keys and values",
              "fullTitle": "Get Request Validate /post api contains the correct keys and values",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  headers: {\n    accept: \"application/json\"\n  }\n}).then((response) => {\n  let body = response.body;\n  expect(body[0]).has.property(\"title\", \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");\n  expect(body[1]).property(\"userId\").eq(1);\n  body.forEach((item) => {\n    expect(item).to.have.keys(\"userId\", \"id\", \"title\", \"body\");\n  });\n});",
              "err": {},
              "uuid": "6e563fef-e622-4315-a027-b2c4c98c2083",
              "parentUUID": "f41145f5-1f6f-44e8-a259-0e9f5df1928f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98cef04b-d2d2-47ed-9c1f-1d346ba828a3",
            "6e563fef-e622-4315-a027-b2c4c98c2083"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 502,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "14bf3cd2-1c7c-4ba9-a00a-38ea707e0516",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\post-request.js",
      "file": "cypress\\e2e\\api testing\\post-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "19308e53-28ac-4ace-94c1-cf4e581f936d",
          "title": "Post Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new post via /post api",
              "fullTitle": "Post Request Create new post via /post api",
              "timedOut": null,
              "duration": 428,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    title: randomTitle,\n    author: \"bog\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "d23d9d5a-4695-4e68-b332-f102b537fae7",
              "parentUUID": "19308e53-28ac-4ace-94c1-cf4e581f936d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate title of latest post",
              "fullTitle": "Post Request Validate title of latest post",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastPost = response.body[response.body.length - 1];\n  console.log(lastPost);\n  expect(lastPost.title).to.eq(\"at nam consequatur ea labore ea harum\");\n});",
              "err": {},
              "uuid": "9bad2d73-7e73-4211-9bea-103553910c1c",
              "parentUUID": "19308e53-28ac-4ace-94c1-cf4e581f936d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d23d9d5a-4695-4e68-b332-f102b537fae7",
            "9bad2d73-7e73-4211-9bea-103553910c1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 578,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "64c76e1c-c407-4e0c-9faf-c86572d67979",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\update-request.js",
      "file": "cypress\\e2e\\api testing\\update-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c3281958-d71d-4a6e-942e-6c3ff7dcc64b",
          "title": "Update Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update an existing post via /post api",
              "fullTitle": "Update Request Update an existing post via /post api",
              "timedOut": null,
              "duration": 358,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"PUT\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\",\n  body: {\n    title: \"Where is your plane?\",\n    author: \"Johny\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "69ab1f52-109b-401e-95dc-8b4397cb8f52",
              "parentUUID": "c3281958-d71d-4a6e-942e-6c3ff7dcc64b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69ab1f52-109b-401e-95dc-8b4397cb8f52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 358,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3707a570-80a1-474e-b0ee-69b5ec046fb0",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd102ca2-1700-49d4-b37e-09a1635edcce",
          "title": "Alias and invoke tutorial",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and invoke tutorial Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 2036,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".thumbnail\").as(\"productThumbnail\");\ncy.get(\"@productThumbnail\").find(\".oneprice\").invoke(\"text\").as(\"itemPrice\");\ncy.get(\"@productThumbnail\").find(\".pricenew\").invoke(\"text\").as(\"saleitemPrice\");\nlet totalProductsValue = 0;\ncy.get(\"@itemPrice\").then((priceText) => {\n  let nonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    nonSale += Number(el);\n  });\n  totalProductsValue = nonSale;\n  console.log(nonSale);\n});\ncy.get(\"@saleitemPrice\").then((priceText) => {\n  let isonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    isonSale += Number(el);\n  });\n  totalProductsValue += isonSale;\n  console.log(isonSale);\n}).then(() => {\n  cy.log(\"Total price of all products is: \", totalProductsValue);\n  expect(totalProductsValue).to.equal(648.5);\n});",
              "err": {},
              "uuid": "613101b8-2c13-4416-9cbd-e956c0b139d5",
              "parentUUID": "cd102ca2-1700-49d4-b37e-09a1635edcce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "613101b8-2c13-4416-9cbd-e956c0b139d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2036,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dbdbe0ea-a0ec-4f1d-9440-ce0ab6da42ba",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "file": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d17acec-8876-4478-addd-cb3c28116900",
          "title": "Test Contact-Us form via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a succesful submission via the contacts us form",
              "fullTitle": "Test Contact-Us form via Automation Test Store Should be able to submit a succesful submission via the contacts us form",
              "timedOut": null,
              "duration": 5136,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#footer > footer > section.footerlinks > div > div.pull-left > div > ul > li:nth-child(5) > a\").click().then((item) => {\n  cy.log(item.text());\n});\ncy.get(\"@user\").then((user) => {\n  cy.get(\"#ContactUsFrm_first_name\").type(user.first_name);\n  cy.get(\"#ContactUsFrm_email\").type(user.email);\n});\ncy.get(\"#ContactUsFrm_email\").should(\"have.attr\", \"name\", \"email\");\ncy.get(\"#ContactUsFrm_enquiry\").type(\"Can you provide some discount to nice consumers?\");\ncy.get(\".col-md-6 > .btn\").click();\ncy.get(\".mb40 > :nth-child(3)\").should(\"have.text\", \"Your enquiry has been successfully sent to the store owner!\");",
              "err": {},
              "uuid": "e2405f11-3b56-4b88-9a86-73e2f9ce7da0",
              "parentUUID": "9d17acec-8876-4478-addd-cb3c28116900",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2405f11-3b56-4b88-9a86-73e2f9ce7da0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c23b7877-db49-434c-871e-9269b2b2fa5f",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\api-challenge.js",
      "file": "cypress\\e2e\\api testing\\api-challenge.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "752bf17b-a08e-4440-b0bc-114bc9be0226",
          "title": "Post, Get, Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a new comment",
              "fullTitle": "Post, Get, Delete Request Create a new comment",
              "timedOut": null,
              "duration": 626,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    body: randomCommentBody,\n    postId\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n  id = response.body.id;\n});",
              "err": {},
              "uuid": "1a7abc0e-681e-4924-ac95-b6f997a3593d",
              "parentUUID": "752bf17b-a08e-4440-b0bc-114bc9be0226",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Locate and assert the new comment",
              "fullTitle": "Post, Get, Delete Request Locate and assert the new comment",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastBodyText = response.body[response.body.length - 1].body;\n  expect(lastBodyText).to.eq(\"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\");\n});",
              "err": {},
              "uuid": "fc5bae1f-a11e-4e2c-88ba-603bb2db7e1a",
              "parentUUID": "752bf17b-a08e-4440-b0bc-114bc9be0226",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the last comment",
              "fullTitle": "Post, Get, Delete Request Delete the last comment",
              "timedOut": null,
              "duration": 382,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: `https://jsonplaceholder.typicode.com/posts/${id}`\n});",
              "err": {},
              "uuid": "8c7fdf53-487b-49c3-8f85-d9d8c2b695c2",
              "parentUUID": "752bf17b-a08e-4440-b0bc-114bc9be0226",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a7abc0e-681e-4924-ac95-b6f997a3593d",
            "fc5bae1f-a11e-4e2c-88ba-603bb2db7e1a",
            "8c7fdf53-487b-49c3-8f85-d9d8c2b695c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a8c537e2-e71d-4519-8d42-ca94a9b28e62",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\api-challenge.js",
      "file": "cypress\\e2e\\api testing\\api-challenge.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c44a86f-8dbd-4ea0-9f7d-b478f12ca200",
          "title": "Post, Get, Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create a new comment",
              "fullTitle": "Post, Get, Delete Request Create a new comment",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    body: randomCommentBody,\n    postId\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n  id = response.body.id;\n});",
              "err": {},
              "uuid": "aef2f48c-b75a-4a9c-a518-7e80f783db94",
              "parentUUID": "5c44a86f-8dbd-4ea0-9f7d-b478f12ca200",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Locate and assert the new comment",
              "fullTitle": "Post, Get, Delete Request Locate and assert the new comment",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastBodyText = response.body[response.body.length - 1].body;\n  expect(lastBodyText).to.eq(\"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\");\n});",
              "err": {},
              "uuid": "02ecb08e-aa88-4ccc-b406-4828db1f3ed7",
              "parentUUID": "5c44a86f-8dbd-4ea0-9f7d-b478f12ca200",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the last comment",
              "fullTitle": "Post, Get, Delete Request Delete the last comment",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: `https://jsonplaceholder.typicode.com/posts/${id}`\n});",
              "err": {},
              "uuid": "c3e8cf54-18b5-46d2-a4b1-8db8a497f05c",
              "parentUUID": "5c44a86f-8dbd-4ea0-9f7d-b478f12ca200",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aef2f48c-b75a-4a9c-a518-7e80f783db94",
            "02ecb08e-aa88-4ccc-b406-4828db1f3ed7",
            "c3e8cf54-18b5-46d2-a4b1-8db8a497f05c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 908,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "016a9124-1f19-4a0c-9bba-1b40c8b02c34",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\delete-request.js",
      "file": "cypress\\e2e\\api testing\\delete-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "18073915-2c6c-4ed3-860d-eb68feb2417b",
          "title": "Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete a post via /posts api",
              "fullTitle": "Delete Request Delete a post via /posts api",
              "timedOut": null,
              "duration": 420,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\"\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "1846fcfb-10aa-4900-ba21-a3d4c61e9611",
              "parentUUID": "18073915-2c6c-4ed3-860d-eb68feb2417b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1846fcfb-10aa-4900-ba21-a3d4c61e9611"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 420,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "23d7859b-1e78-4de3-8fbf-4e724cbd984d",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\delete-request.js",
      "file": "cypress\\e2e\\api testing\\delete-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b5e51455-6401-40d3-8a67-4837b9b450c9",
          "title": "Delete Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete a post via /posts api",
              "fullTitle": "Delete Request Delete a post via /posts api",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\"\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "72066e22-810d-4086-bd71-768a303357b5",
              "parentUUID": "b5e51455-6401-40d3-8a67-4837b9b450c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72066e22-810d-4086-bd71-768a303357b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 360,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3b8e5444-d7b3-4d0d-bfeb-87d5835d0064",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\get-request.js",
      "file": "cypress\\e2e\\api testing\\get-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "602a310b-1552-4844-a62d-35b91ab02641",
          "title": "Get Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate status code of the /post api",
              "fullTitle": "Get Request Validate status code of the /post api",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "result = cy.request({\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).its(\"status\").should(\"eq\", 200);",
              "err": {},
              "uuid": "7e05c0f3-e6f6-486f-9f15-94630ac5a8d7",
              "parentUUID": "602a310b-1552-4844-a62d-35b91ab02641",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate /post api contains the correct keys and values",
              "fullTitle": "Get Request Validate /post api contains the correct keys and values",
              "timedOut": null,
              "duration": 424,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  headers: {\n    accept: \"application/json\"\n  }\n}).then((response) => {\n  let body = response.body;\n  expect(body[0]).has.property(\"title\", \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");\n  expect(body[1]).property(\"userId\").eq(1);\n  body.forEach((item) => {\n    expect(item).to.have.keys(\"userId\", \"id\", \"title\", \"body\");\n  });\n});",
              "err": {},
              "uuid": "9529c7e0-6ced-4479-bd1e-264c2fcd5f58",
              "parentUUID": "602a310b-1552-4844-a62d-35b91ab02641",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e05c0f3-e6f6-486f-9f15-94630ac5a8d7",
            "9529c7e0-6ced-4479-bd1e-264c2fcd5f58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1fb74dbf-d796-47a3-9e3c-64490f9d850e",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\get-request.js",
      "file": "cypress\\e2e\\api testing\\get-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f4f26f98-9fd9-45f5-badb-bdd0b76598fc",
          "title": "Get Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate status code of the /post api",
              "fullTitle": "Get Request Validate status code of the /post api",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "result = cy.request({\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).its(\"status\").should(\"eq\", 200);",
              "err": {},
              "uuid": "a3c77480-abb5-40c6-846b-f44965f6a60d",
              "parentUUID": "f4f26f98-9fd9-45f5-badb-bdd0b76598fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate /post api contains the correct keys and values",
              "fullTitle": "Get Request Validate /post api contains the correct keys and values",
              "timedOut": null,
              "duration": 353,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  headers: {\n    accept: \"application/json\"\n  }\n}).then((response) => {\n  let body = response.body;\n  expect(body[0]).has.property(\"title\", \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\");\n  expect(body[1]).property(\"userId\").eq(1);\n  body.forEach((item) => {\n    expect(item).to.have.keys(\"userId\", \"id\", \"title\", \"body\");\n  });\n});",
              "err": {},
              "uuid": "f58b9f65-3d08-47aa-912a-f6d3006f88f7",
              "parentUUID": "f4f26f98-9fd9-45f5-badb-bdd0b76598fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3c77480-abb5-40c6-846b-f44965f6a60d",
            "f58b9f65-3d08-47aa-912a-f6d3006f88f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 532,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "88db982b-389b-4f8e-950d-81da1567b946",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\post-request.js",
      "file": "cypress\\e2e\\api testing\\post-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "140dc0c8-a916-42f1-9ee6-388b24529e14",
          "title": "Post Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new post via /post api",
              "fullTitle": "Post Request Create new post via /post api",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    title: randomTitle,\n    author: \"bog\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "2e91dd93-8f13-403e-8749-44255aa68f5b",
              "parentUUID": "140dc0c8-a916-42f1-9ee6-388b24529e14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate title of latest post",
              "fullTitle": "Post Request Validate title of latest post",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastPost = response.body[response.body.length - 1];\n  console.log(lastPost);\n  expect(lastPost.title).to.eq(\"at nam consequatur ea labore ea harum\");\n});",
              "err": {},
              "uuid": "591a0c46-310b-4969-b2f6-c6e9c8ead797",
              "parentUUID": "140dc0c8-a916-42f1-9ee6-388b24529e14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e91dd93-8f13-403e-8749-44255aa68f5b",
            "591a0c46-310b-4969-b2f6-c6e9c8ead797"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 540,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "398ae1d4-f651-493b-858e-bba6469e25ae",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\post-request.js",
      "file": "cypress\\e2e\\api testing\\post-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f83f950a-fb83-4037-acda-6a63aa62820f",
          "title": "Post Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new post via /post api",
              "fullTitle": "Post Request Create new post via /post api",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://jsonplaceholder.typicode.com/posts\",\n  body: {\n    title: randomTitle,\n    author: \"bog\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "b760d313-8d61-4b6f-b920-8c830705179a",
              "parentUUID": "f83f950a-fb83-4037-acda-6a63aa62820f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate title of latest post",
              "fullTitle": "Post Request Validate title of latest post",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://jsonplaceholder.typicode.com/posts\"\n}).then((response) => {\n  const lastPost = response.body[response.body.length - 1];\n  console.log(lastPost);\n  expect(lastPost.title).to.eq(\"at nam consequatur ea labore ea harum\");\n});",
              "err": {},
              "uuid": "7e2918b5-20b3-4735-8860-ba8a2c22b9f4",
              "parentUUID": "f83f950a-fb83-4037-acda-6a63aa62820f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b760d313-8d61-4b6f-b920-8c830705179a",
            "7e2918b5-20b3-4735-8860-ba8a2c22b9f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9e2bcb8c-71b0-4732-bd2b-efffccd62dd3",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\update-request.js",
      "file": "cypress\\e2e\\api testing\\update-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8cdb47b4-a829-4a23-94f8-33c2fb14bfab",
          "title": "Update Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update an existing post via /post api",
              "fullTitle": "Update Request Update an existing post via /post api",
              "timedOut": null,
              "duration": 423,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"PUT\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\",\n  body: {\n    title: \"Where is your plane?\",\n    author: \"Johny\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "800ad359-c29b-4411-b609-525ff37e93a4",
              "parentUUID": "8cdb47b4-a829-4a23-94f8-33c2fb14bfab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "800ad359-c29b-4411-b609-525ff37e93a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 423,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8c3b1549-e53a-490a-8567-2745b4bc81db",
      "title": "",
      "fullFile": "cypress\\e2e\\api testing\\update-request.js",
      "file": "cypress\\e2e\\api testing\\update-request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9921bda8-4ad5-4073-8a2b-dc8aca96215c",
          "title": "Update Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update an existing post via /post api",
              "fullTitle": "Update Request Update an existing post via /post api",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"PUT\",\n  url: \"https://jsonplaceholder.typicode.com/posts/2\",\n  body: {\n    title: \"Where is your plane?\",\n    author: \"Johny\"\n  }\n}).then((response) => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "7d1c0c99-394b-492f-800d-dbc487afa64a",
              "parentUUID": "9921bda8-4ad5-4073-8a2b-dc8aca96215c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d1c0c99-394b-492f-800d-dbc487afa64a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 366,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "df483c4d-136d-4c5c-b469-3bb8877ccd76",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16217308-70c2-4fda-a84d-5b0198a7e4c5",
          "title": "Alias and invoke tutorial",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and invoke tutorial Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 2718,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".thumbnail\").as(\"productThumbnail\");\ncy.get(\"@productThumbnail\").find(\".oneprice\").invoke(\"text\").as(\"itemPrice\");\ncy.get(\"@productThumbnail\").find(\".pricenew\").invoke(\"text\").as(\"saleitemPrice\");\nlet totalProductsValue = 0;\ncy.get(\"@itemPrice\").then((priceText) => {\n  let nonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    nonSale += Number(el);\n  });\n  totalProductsValue = nonSale;\n  console.log(nonSale);\n});\ncy.get(\"@saleitemPrice\").then((priceText) => {\n  let isonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    isonSale += Number(el);\n  });\n  totalProductsValue += isonSale;\n  console.log(isonSale);\n}).then(() => {\n  cy.log(\"Total price of all products is: \", totalProductsValue);\n  expect(totalProductsValue).to.equal(648.5);\n});",
              "err": {},
              "uuid": "b689c90c-f016-4c5c-898b-1d2b5ea69b0c",
              "parentUUID": "16217308-70c2-4fda-a84d-5b0198a7e4c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b689c90c-f016-4c5c-898b-1d2b5ea69b0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2718,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f55e5238-e1d9-47c6-b377-b8ae5eed441f",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ffcdb93c-ada5-4317-98fd-a5b9dfe2293c",
          "title": "Alias and invoke tutorial",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total of normal and sale products",
              "fullTitle": "Alias and invoke tutorial Calculate total of normal and sale products",
              "timedOut": null,
              "duration": 2404,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".thumbnail\").as(\"productThumbnail\");\ncy.get(\"@productThumbnail\").find(\".oneprice\").invoke(\"text\").as(\"itemPrice\");\ncy.get(\"@productThumbnail\").find(\".pricenew\").invoke(\"text\").as(\"saleitemPrice\");\nlet totalProductsValue = 0;\ncy.get(\"@itemPrice\").then((priceText) => {\n  let nonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    nonSale += Number(el);\n  });\n  totalProductsValue = nonSale;\n  console.log(nonSale);\n});\ncy.get(\"@saleitemPrice\").then((priceText) => {\n  let isonSale = 0;\n  let priceNumber = priceText.split(\"$\").forEach((el) => {\n    isonSale += Number(el);\n  });\n  totalProductsValue += isonSale;\n  console.log(isonSale);\n}).then(() => {\n  cy.log(\"Total price of all products is: \", totalProductsValue);\n  expect(totalProductsValue).to.equal(648.5);\n});",
              "err": {},
              "uuid": "883c1334-5e38-43e9-9d59-79d344bf0d2b",
              "parentUUID": "ffcdb93c-ada5-4317-98fd-a5b9dfe2293c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "883c1334-5e38-43e9-9d59-79d344bf0d2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e81536df-8008-48ef-b0c6-e8c77638c476",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "file": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d774361f-236d-4cc5-80a0-5c4fc70d9096",
          "title": "Test Contact-Us form via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a succesful submission via the contacts us form",
              "fullTitle": "Test Contact-Us form via Automation Test Store Should be able to submit a succesful submission via the contacts us form",
              "timedOut": null,
              "duration": 5298,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#footer > footer > section.footerlinks > div > div.pull-left > div > ul > li:nth-child(5) > a\").click().then((item) => {\n  cy.log(item.text());\n});\ncy.get(\"@user\").then((user) => {\n  cy.get(\"#ContactUsFrm_first_name\").type(user.first_name);\n  cy.get(\"#ContactUsFrm_email\").type(user.email);\n});\ncy.get(\"#ContactUsFrm_email\").should(\"have.attr\", \"name\", \"email\");\ncy.get(\"#ContactUsFrm_enquiry\").type(\"Can you provide some discount to nice consumers?\");\ncy.get(\".col-md-6 > .btn\").click();\ncy.get(\".mb40 > :nth-child(3)\").should(\"have.text\", \"Your enquiry has been successfully sent to the store owner!\");",
              "err": {},
              "uuid": "78a07a81-34b6-456f-9077-6c0c02cc9c7d",
              "parentUUID": "d774361f-236d-4cc5-80a0-5c4fc70d9096",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78a07a81-34b6-456f-9077-6c0c02cc9c7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "99e0a55f-5c11-4a88-8594-29af2ad45efb",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "file": "cypress\\e2e\\automation-test-store\\contact-us.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f246a310-2030-49b1-bd65-a18cdb2bd7f4",
          "title": "Test Contact-Us form via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a succesful submission via the contacts us form",
              "fullTitle": "Test Contact-Us form via Automation Test Store Should be able to submit a succesful submission via the contacts us form",
              "timedOut": null,
              "duration": 5296,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#footer > footer > section.footerlinks > div > div.pull-left > div > ul > li:nth-child(5) > a\").click().then((item) => {\n  cy.log(item.text());\n});\ncy.get(\"@user\").then((user) => {\n  cy.get(\"#ContactUsFrm_first_name\").type(user.first_name);\n  cy.get(\"#ContactUsFrm_email\").type(user.email);\n});\ncy.get(\"#ContactUsFrm_email\").should(\"have.attr\", \"name\", \"email\");\ncy.get(\"#ContactUsFrm_enquiry\").type(\"Can you provide some discount to nice consumers?\");\ncy.get(\".col-md-6 > .btn\").click();\ncy.get(\".mb40 > :nth-child(3)\").should(\"have.text\", \"Your enquiry has been successfully sent to the store owner!\");",
              "err": {},
              "uuid": "8104edd8-aae8-4b56-b075-0c47d7631720",
              "parentUUID": "f246a310-2030-49b1-bd65-a18cdb2bd7f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8104edd8-aae8-4b56-b075-0c47d7631720"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5296,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bfd1776e-0cbc-46dd-9416-8e00d9f6d1f9",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "file": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f84428c5-bd84-4088-842a-d6eea093a452",
          "title": "Insepct Automation Test Store using chain of commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click on the first item using item header",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using item header",
              "timedOut": null,
              "duration": 2210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".prdocutname\").contains(\"Skinsheen Bronzer Stick\").click();",
              "err": {},
              "uuid": "83fd4e0e-e6a0-413e-91d7-1c1a58e7f1df",
              "parentUUID": "f84428c5-bd84-4088-842a-d6eea093a452",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using text",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using text",
              "timedOut": null,
              "duration": 1553,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".prdocutname\").contains(\"Skinsheen Bronzer Stick\").click().then((itemText) => {\n  console.log(\"The following item is selected \", itemText.text());\n});",
              "err": {},
              "uuid": "a4ce864b-95fd-4e76-9188-113899f24460",
              "parentUUID": "f84428c5-bd84-4088-842a-d6eea093a452",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using index",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using index",
              "timedOut": null,
              "duration": 1272,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".fixed_wrapper\").find(\".prdocutname\").eq(0);",
              "err": {},
              "uuid": "0583c6a8-4c30-4087-a65a-014a48e10f91",
              "parentUUID": "f84428c5-bd84-4088-842a-d6eea093a452",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83fd4e0e-e6a0-413e-91d7-1c1a58e7f1df",
            "a4ce864b-95fd-4e76-9188-113899f24460",
            "0583c6a8-4c30-4087-a65a-014a48e10f91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5035,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8abbffbe-a29b-4321-8af0-da8ba16b1d14",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "file": "cypress\\e2e\\automation-test-store\\inspect-item.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5abcf8a3-1763-44c4-ad5f-fa6d48724021",
          "title": "Insepct Automation Test Store using chain of commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Click on the first item using item header",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using item header",
              "timedOut": null,
              "duration": 2512,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".prdocutname\").contains(\"Skinsheen Bronzer Stick\").click();",
              "err": {},
              "uuid": "2b0d184a-1f43-4cdf-adab-44f6716be376",
              "parentUUID": "5abcf8a3-1763-44c4-ad5f-fa6d48724021",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using text",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using text",
              "timedOut": null,
              "duration": 2110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".prdocutname\").contains(\"Skinsheen Bronzer Stick\").click().then((itemText) => {\n  console.log(\"The following item is selected \", itemText.text());\n});",
              "err": {},
              "uuid": "8a66a658-4d4b-429d-8874-9441d8656ecb",
              "parentUUID": "5abcf8a3-1763-44c4-ad5f-fa6d48724021",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the first item using index",
              "fullTitle": "Insepct Automation Test Store using chain of commands Click on the first item using index",
              "timedOut": null,
              "duration": 745,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\".fixed_wrapper\").find(\".prdocutname\").eq(0);",
              "err": {},
              "uuid": "3417905c-0276-48b9-ac9a-c96333eb5d2b",
              "parentUUID": "5abcf8a3-1763-44c4-ad5f-fa6d48724021",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b0d184a-1f43-4cdf-adab-44f6716be376",
            "8a66a658-4d4b-429d-8874-9441d8656ecb",
            "3417905c-0276-48b9-ac9a-c96333eb5d2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5367,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "19deef43-fa89-4397-aff8-a8b41b6a942a",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\iterate-over-elements.js",
      "file": "cypress\\e2e\\automation-test-store\\iterate-over-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fe4191dd-a4d7-4d9a-89d7-c10f468a5772",
          "title": "Iterate over element",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log information of all Hair care product",
              "fullTitle": "Iterate over element Log information of all Hair care product",
              "timedOut": null,
              "duration": 2987,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".fixed_wrapper .prdocutname\").each((el, index, list) => {\n  cy.log(index, \" : \", el.text());\n});",
              "err": {},
              "uuid": "163bbf20-3a8c-4f1b-8cf5-ef7d9b897ce0",
              "parentUUID": "fe4191dd-a4d7-4d9a-89d7-c10f468a5772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add specific product to basket",
              "fullTitle": "Iterate over element Add specific product to basket",
              "timedOut": null,
              "duration": 1353,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Eau Parfumee au The Vert Shampoo\");",
              "err": {},
              "uuid": "82633f04-cd0c-4476-ac4b-62153a4ba65c",
              "parentUUID": "fe4191dd-a4d7-4d9a-89d7-c10f468a5772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over element Add another specific product to basket",
              "timedOut": null,
              "duration": 1848,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Seaweed Conditioner\");",
              "err": {},
              "uuid": "b6d6e837-bd1b-4431-8c39-99b6cf1f014b",
              "parentUUID": "fe4191dd-a4d7-4d9a-89d7-c10f468a5772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add one more product to basket",
              "fullTitle": "Iterate over element Add one more product to basket",
              "timedOut": null,
              "duration": 1552,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Eau Parfumee au The Vert Shampoo\");",
              "err": {},
              "uuid": "612e8f14-0de6-4836-8bb5-41c30fa0ada2",
              "parentUUID": "fe4191dd-a4d7-4d9a-89d7-c10f468a5772",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "163bbf20-3a8c-4f1b-8cf5-ef7d9b897ce0",
            "82633f04-cd0c-4476-ac4b-62153a4ba65c",
            "b6d6e837-bd1b-4431-8c39-99b6cf1f014b",
            "612e8f14-0de6-4836-8bb5-41c30fa0ada2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7740,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f87a7dc9-75e6-4508-9cea-e0d93f48461a",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\iterate-over-elements.js",
      "file": "cypress\\e2e\\automation-test-store\\iterate-over-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ffa433dd-213d-4027-a9d7-e510f975a79a",
          "title": "Iterate over element",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Log information of all Hair care product",
              "fullTitle": "Iterate over element Log information of all Hair care product",
              "timedOut": null,
              "duration": 2967,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".fixed_wrapper .prdocutname\").each((el, index, list) => {\n  cy.log(index, \" : \", el.text());\n});",
              "err": {},
              "uuid": "3a28aa08-da22-4abd-8c9c-d040b6189ea0",
              "parentUUID": "ffa433dd-213d-4027-a9d7-e510f975a79a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add specific product to basket",
              "fullTitle": "Iterate over element Add specific product to basket",
              "timedOut": null,
              "duration": 1885,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Eau Parfumee au The Vert Shampoo\");",
              "err": {},
              "uuid": "3e755543-f38a-4067-ad0d-0e0a97d7e182",
              "parentUUID": "ffa433dd-213d-4027-a9d7-e510f975a79a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add another specific product to basket",
              "fullTitle": "Iterate over element Add another specific product to basket",
              "timedOut": null,
              "duration": 1819,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Seaweed Conditioner\");",
              "err": {},
              "uuid": "a3872143-a4e2-4ac6-ac03-90cd5a629faa",
              "parentUUID": "ffa433dd-213d-4027-a9d7-e510f975a79a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add one more product to basket",
              "fullTitle": "Iterate over element Add one more product to basket",
              "timedOut": null,
              "duration": 1734,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.selectProduct(\"Eau Parfumee au The Vert Shampoo\");",
              "err": {},
              "uuid": "1e218c11-68d1-4de6-9ed7-38d86ca12f4a",
              "parentUUID": "ffa433dd-213d-4027-a9d7-e510f975a79a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a28aa08-da22-4abd-8c9c-d040b6189ea0",
            "3e755543-f38a-4067-ad0d-0e0a97d7e182",
            "a3872143-a4e2-4ac6-ac03-90cd5a629faa",
            "1e218c11-68d1-4de6-9ed7-38d86ca12f4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8405,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "89aa3704-224a-4901-b8b9-d6961523c0b5",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "file": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3d3fb5da-4879-4c67-bcd0-b5defaf8194c",
          "title": "Verifying variables, cypress commands and jQuery commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate properties of the Contact Us page",
              "fullTitle": "Verifying variables, cypress commands and jQuery commands Validate properties of the Contact Us page",
              "timedOut": null,
              "duration": 1577,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/index.php?rt=content/contact\");\ncy.contains(\"#ContactUsFrm\", \"Contact Us Form\").find(\"#field_11\").should(\"contain\", \"First name\");\ncy.contains(\"#ContactUsFrm\", \"Contact Us Form\").then((divText) => {\n  const firstNameText = divText.find(\"#field_11\").text();\n  expect(firstNameText).to.contain(\"First name\");\n  cy.get(\"#field_11\").then((fnText) => {\n    cy.log(fnText.text());\n  });\n});",
              "err": {},
              "uuid": "8ad67868-f9f3-4cba-9751-1ef2fc6118f0",
              "parentUUID": "3d3fb5da-4879-4c67-bcd0-b5defaf8194c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ad67868-f9f3-4cba-9751-1ef2fc6118f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1577,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7735da8e-2f3c-4ba9-83c4-09280f99e403",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "file": "cypress\\e2e\\automation-test-store\\variables-and-cy-commands.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9af21f8c-6a27-4041-86f7-236532f6a3e0",
          "title": "Verifying variables, cypress commands and jQuery commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate properties of the Contact Us page",
              "fullTitle": "Verifying variables, cypress commands and jQuery commands Validate properties of the Contact Us page",
              "timedOut": null,
              "duration": 1626,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/index.php?rt=content/contact\");\ncy.contains(\"#ContactUsFrm\", \"Contact Us Form\").find(\"#field_11\").should(\"contain\", \"First name\");\ncy.contains(\"#ContactUsFrm\", \"Contact Us Form\").then((divText) => {\n  const firstNameText = divText.find(\"#field_11\").text();\n  expect(firstNameText).to.contain(\"First name\");\n  cy.get(\"#field_11\").then((fnText) => {\n    cy.log(fnText.text());\n  });\n});",
              "err": {},
              "uuid": "085e624d-4cdf-481a-bc34-f4fcb282beb1",
              "parentUUID": "9af21f8c-6a27-4041-86f7-236532f6a3e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "085e624d-4cdf-481a-bc34-f4fcb282beb1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1626,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a1bc38d8-5801-49d6-af31-3c6454d81911",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\Login.feature",
      "file": "cypress\\e2e\\features\\Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fb10d9b2-e74d-4c1f-ab34-8d1785ae176f",
          "title": "WebdriverUniversity Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using valid credentials",
              "fullTitle": "WebdriverUniversity Login Page Login using valid credentials",
              "timedOut": null,
              "duration": 1697,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "2dea68a4-e07c-477e-a94e-eab55e890cae",
              "parentUUID": "fb10d9b2-e74d-4c1f-ab34-8d1785ae176f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login using invalid credentials(password)",
              "fullTitle": "WebdriverUniversity Login Page Login using invalid credentials(password)",
              "timedOut": null,
              "duration": 3243,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "b570e355-9746-4db8-ae8e-769180872c75",
              "parentUUID": "fb10d9b2-e74d-4c1f-ab34-8d1785ae176f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Login via Webdriveruniversity Login Portal (example #1)",
              "fullTitle": "WebdriverUniversity Login Page Test Login via Webdriveruniversity Login Portal (example #1)",
              "timedOut": null,
              "duration": 1640,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "411f8e75-e54e-4a8c-9dd4-49ed16dd7344",
              "parentUUID": "fb10d9b2-e74d-4c1f-ab34-8d1785ae176f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Login via Webdriveruniversity Login Portal (example #2)",
              "fullTitle": "WebdriverUniversity Login Page Test Login via Webdriveruniversity Login Portal (example #2)",
              "timedOut": null,
              "duration": 1330,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "d6aaff98-2f18-4bc3-8459-7f065aede5a5",
              "parentUUID": "fb10d9b2-e74d-4c1f-ab34-8d1785ae176f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2dea68a4-e07c-477e-a94e-eab55e890cae",
            "b570e355-9746-4db8-ae8e-769180872c75",
            "411f8e75-e54e-4a8c-9dd4-49ed16dd7344",
            "d6aaff98-2f18-4bc3-8459-7f065aede5a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7910,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3ef57f1e-9647-4ebf-8cf5-2328df4715e6",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\Login.feature",
      "file": "cypress\\e2e\\features\\Login.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "79e4b130-a25f-4643-95ea-38b02521f59d",
          "title": "WebdriverUniversity Login Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login using valid credentials",
              "fullTitle": "WebdriverUniversity Login Page Login using valid credentials",
              "timedOut": null,
              "duration": 3003,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "c2a6a9c6-8749-4075-ac68-6e013faf9ac1",
              "parentUUID": "79e4b130-a25f-4643-95ea-38b02521f59d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login using invalid credentials(password)",
              "fullTitle": "WebdriverUniversity Login Page Login using invalid credentials(password)",
              "timedOut": null,
              "duration": 2262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "03844faa-4184-4524-9abc-2cab8afea74e",
              "parentUUID": "79e4b130-a25f-4643-95ea-38b02521f59d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Login via Webdriveruniversity Login Portal (example #1)",
              "fullTitle": "WebdriverUniversity Login Page Test Login via Webdriveruniversity Login Portal (example #1)",
              "timedOut": null,
              "duration": 1462,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "e5747ae5-30b9-4ce1-b866-27821a696c6f",
              "parentUUID": "79e4b130-a25f-4643-95ea-38b02521f59d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Login via Webdriveruniversity Login Portal (example #2)",
              "fullTitle": "WebdriverUniversity Login Page Test Login via Webdriveruniversity Login Portal (example #2)",
              "timedOut": null,
              "duration": 1761,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _a2, _b, _c, _d, _e;\nconst { remainingSteps, testCaseStartedId } = retrieveInternalProperties();\n(0, registry_1.assignRegistry)(registry2);\nmessages.stack.push({\n  testCaseStarted: {\n    id: testCaseStartedId,\n    testCaseId,\n    attempt: attempt++,\n    timestamp: createTimestamp()\n  }\n});\nwindow.testState = {\n  gherkinDocument,\n  pickles,\n  pickle\n};\nfor (const step of steps) {\n  if (step.hook) {\n    const hook = step.hook;\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: hook.keyword,\n        message: \"\"\n      });\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, hook.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      registry2.runHook(this, hook);\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const end = createTimestamp();\n      messages.stack.push({\n        testStepFinished: {\n          testStepId: hook.id,\n          testCaseStartedId,\n          testStepResult: {\n            status: Status.Passed,\n            duration: duration(start, end)\n          },\n          timestamp: end\n        }\n      });\n      remainingSteps.shift();\n    });\n  } else if (step.pickleStep) {\n    const pickleStep = step.pickleStep;\n    const text = (0, assertions_1.assertAndReturn)(pickleStep.text, \"Expected pickle step to have a text\");\n    const scenarioStep = (0, assertions_1.assertAndReturn)(astIdMap.get((0, assertions_1.assertAndReturn)((_a2 = pickleStep.astNodeIds) === null || _a2 === void 0 ? void 0 : _a2[0], \"Expected to find at least one astNodeId\")), `Expected to find scenario step associated with id = ${(_b = pickleStep.astNodeIds) === null || _b === void 0 ? void 0 : _b[0]}`);\n    cy.then(() => {\n      Cypress.log({\n        name: \"step\",\n        displayName: (0, assertions_1.assertAndReturn)(\"keyword\" in scenarioStep && scenarioStep.keyword, \"Expected to find a keyword in the scenario step\"),\n        message: text\n      });\n    });\n    const argument = ((_c = pickleStep.argument) === null || _c === void 0 ? void 0 : _c.dataTable) ? new data_table_1.default(pickleStep.argument.dataTable) : ((_e = (_d = pickleStep.argument) === null || _d === void 0 ? void 0 : _d.docString) === null || _e === void 0 ? void 0 : _e.content) ? pickleStep.argument.docString.content : void 0;\n    cy.then(() => {\n      internalProperties.currentStep = { pickleStep };\n      const start = createTimestamp();\n      messages.stack.push({\n        testStepStarted: {\n          testStepId: pickleStep.id,\n          testCaseStartedId,\n          timestamp: start\n        }\n      });\n      if (messages.enabled) {\n        cy.task(constants_1.TASK_TEST_STEP_STARTED, pickleStep.id, { log: false });\n      }\n      return cy.wrap(start, { log: false });\n    }).then((start) => {\n      const ensureChain = (value) => Cypress.isCy(value) ? value : cy.wrap(value, { log: false });\n      return ensureChain(registry2.runStepDefininition(this, text, argument)).then((result) => {\n        return {\n          start,\n          result\n        };\n      });\n    }).then(({ start, result }) => {\n      var _a3, _b2, _c2;\n      const end = createTimestamp();\n      if (result === \"pending\") {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Pending,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n        for (const skippedStep of remainingSteps) {\n          const testStepId = (0, assertions_1.assertAndReturn)((_b2 = (_a3 = skippedStep.hook) === null || _a3 === void 0 ? void 0 : _a3.id) !== null && _b2 !== void 0 ? _b2 : (_c2 = skippedStep.pickleStep) === null || _c2 === void 0 ? void 0 : _c2.id, \"Expected a step to either be a hook or a pickleStep\");\n          messages.stack.push({\n            testStepStarted: {\n              testStepId,\n              testCaseStartedId\n            }\n          });\n          messages.stack.push({\n            testStepFinished: {\n              testStepId,\n              testCaseStartedId,\n              testStepResult: {\n                status: Status.Skipped\n              }\n            }\n          });\n        }\n        for (let i = 0, count = remainingSteps.length; i < count; i++) {\n          remainingSteps.pop();\n        }\n        this.skip();\n      } else {\n        messages.stack.push({\n          testStepFinished: {\n            testStepId: pickleStep.id,\n            testCaseStartedId,\n            testStepResult: {\n              status: Status.Passed,\n              duration: duration(start, end)\n            },\n            timestamp: end\n          }\n        });\n        remainingSteps.shift();\n      }\n    });\n  }\n}",
              "err": {},
              "uuid": "28949715-c4b2-42e5-8149-cbb11507b4a3",
              "parentUUID": "79e4b130-a25f-4643-95ea-38b02521f59d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2a6a9c6-8749-4075-ac68-6e013faf9ac1",
            "03844faa-4184-4524-9abc-2cab8afea74e",
            "e5747ae5-30b9-4ce1-b866-27821a696c6f",
            "28949715-c4b2-42e5-8149-cbb11507b4a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8488,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "21915698-dcac-454a-81a3-5fc8eb2f0b06",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\intercept.js",
      "file": "cypress\\e2e\\other\\intercept.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e185b998-b34a-4d42-bbab-1947dd5e0265",
          "title": "Use cy.intercept to spy or stub requests and responses",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Intercept the  request  and modify the response",
              "fullTitle": "Use cy.intercept to spy or stub requests and responses Intercept the  request  and modify the response",
              "timedOut": null,
              "duration": 5061,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://jsonplaceholder.typicode.com\");\ncy.intercept({ method: \"GET\", path: \"/posts\" }, (req) => {\n  req.on(\"before:response\", (res) => {\n  });\n  req.continue((res) => {\n    res.setThrottle(1e3);\n    res.setDelay(2e3);\n    console.log(res);\n  });\n}).as(\"posts\");\ncy.get(\"table:nth-of-type(1) a[href='/posts']\").click();\ncy.wait(\"@posts\").then((intercept) => {\n  console.log(intercept.response);\n});",
              "err": {},
              "uuid": "10270b95-2522-4946-8b91-c0ea5752daf4",
              "parentUUID": "e185b998-b34a-4d42-bbab-1947dd5e0265",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10270b95-2522-4946-8b91-c0ea5752daf4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5061,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5bd0dc17-356a-490e-a8d4-2ad9f782aef0",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\intercept.js",
      "file": "cypress\\e2e\\other\\intercept.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c4966fd-beab-4a59-ae7d-7340494fa035",
          "title": "Use cy.intercept to spy or stub requests and responses",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Intercept the  request  and modify the response",
              "fullTitle": "Use cy.intercept to spy or stub requests and responses Intercept the  request  and modify the response",
              "timedOut": null,
              "duration": 4413,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://jsonplaceholder.typicode.com\");\ncy.intercept({ method: \"GET\", path: \"/posts\" }, (req) => {\n  req.on(\"before:response\", (res) => {\n  });\n  req.continue((res) => {\n    res.setThrottle(1e3);\n    res.setDelay(2e3);\n    console.log(res);\n  });\n}).as(\"posts\");\ncy.get(\"table:nth-of-type(1) a[href='/posts']\").click();\ncy.wait(\"@posts\").then((intercept) => {\n  console.log(intercept.response);\n});",
              "err": {},
              "uuid": "b4077f0d-2a46-4922-ab85-132bb97aa6c1",
              "parentUUID": "6c4966fd-beab-4a59-ae7d-7340494fa035",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4077f0d-2a46-4922-ab85-132bb97aa6c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "308c29fa-6ef5-4ed2-8487-52397d6e93d1",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\qaclickacademy.js",
      "file": "cypress\\e2e\\other\\qaclickacademy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "124059d4-8457-4beb-b8a6-60953f31e327",
          "title": "Practice testing on qaclickcademy.com practice site",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify that radio buttons, autocomplete, dropdown menu and checkboxes can be used",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify that radio buttons, autocomplete, dropdown menu and checkboxes can be used",
              "timedOut": null,
              "duration": 6614,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[for=\"radio1\"]').children().check().should(\"be.checked\");\ncy.get('input[value=\"radio2\"]').check().should(\"be.checked\");\ncy.get(\"label\").find('[value=\"radio3\"]').first().check().should(\"be.checked\");\ncy.get('[placeholder=\"Type to Select Countries\"]').type(\"ro\").then(() => {\n  cy.get(\"#ui-id-1\").each((el, idx, list) => {\n    cy.contains(\"Romania\").click().then(() => {\n      cy.get(\"#autocomplete\").should(\"have.value\", \"Romania\");\n    });\n  });\n});\ncy.get(\"#dropdown-class-example\").select(\"option3\").should(\"have.value\", \"option3\");\ncy.get(\"#checkbox-example fieldset label>input\").check().should(\"be.checked\");",
              "err": {},
              "uuid": "e0f4628e-3979-4f18-897b-fe529326dd2b",
              "parentUUID": "124059d4-8457-4beb-b8a6-60953f31e327",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that new tab link works",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify that new tab link works",
              "timedOut": null,
              "duration": 2879,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#opentab\").invoke(\"attr\", \"target\", \"_self\").click().then(() => {\n  cy.url().should(\"eq\", \"https://www.rahulshettyacademy.com/\");\n});",
              "err": {},
              "uuid": "fe50259d-68c3-4d8a-95b8-55602dd83699",
              "parentUUID": "124059d4-8457-4beb-b8a6-60953f31e327",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify alert and confirm pop-ups",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify alert and confirm pop-ups",
              "timedOut": null,
              "duration": 2056,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#name\").type(\"Bogdan\");\ncy.get(\"#alertbtn\").click();\ncy.on(\"window:alert\", (message) => {\n  expect(message).to.equal(\"Hello Bogdan, share this practice page and share your knowledge\");\n});\ncy.get(\"#name\").type(\"Bogdan\");\ncy.get(\"#confirmbtn\").click();\ncy.on(\"window:confirm\", (message) => {\n  expect(message).to.equal(\"Hello Bogdan, Are you sure you want to confirm?\");\n  return true;\n});",
              "err": {},
              "uuid": "d2c09520-7717-413d-b955-6be3d03e15fe",
              "parentUUID": "124059d4-8457-4beb-b8a6-60953f31e327",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Traverse table",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Traverse table",
              "timedOut": null,
              "duration": 1386,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#product td\").contains(\"Bugzilla\").next().should(\"have.text\", \"25\");\ncy.get(\"#product td\").contains(\"Resume\").siblings().parentsUntil(\"fieldset\").should(\"have.length\", 3);",
              "err": {},
              "uuid": "e9699ae3-ea16-4112-a904-8a46af2fbe1b",
              "parentUUID": "124059d4-8457-4beb-b8a6-60953f31e327",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check visibility of input",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Check visibility of input",
              "timedOut": null,
              "duration": 1786,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"legend\").contains(\"Element Displayed Example\").siblings(\"#displayed-text\").type(\"Bogdan\").should(\"be.visible\").and(\"have.value\", \"Bogdan\");\ncy.get(\"#hide-textbox\").click().then(() => {\n  cy.get(\"#displayed-text\").should(\"not.be.visible\").and(\"have.css\", \"display\", \"none\");\n});",
              "err": {},
              "uuid": "1d496fb5-cceb-48c6-a225-8307c8a75d6a",
              "parentUUID": "124059d4-8457-4beb-b8a6-60953f31e327",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sum all the values from the Amount column and verify it ",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Sum all the values from the Amount column and verify it ",
              "timedOut": null,
              "duration": 1153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let totalSum = 0;\ncy.get(\".tableFixHead #product td:last-child\").each((el) => {\n  const value = parseInt(el.text());\n  totalSum += value;\n});\ncy.get(\".totalAmount\").then((el) => {\n  let numberFromText = parseInt(el.text().match(/\\d/g).join(\"\"));\n  expect(numberFromText).to.equal(totalSum);\n});",
              "err": {},
              "uuid": "fa4b54cd-c095-4e8c-91a8-aa2e4d12a45d",
              "parentUUID": "124059d4-8457-4beb-b8a6-60953f31e327",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hover over element",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Hover over element",
              "timedOut": null,
              "duration": 2401,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#mousehover\").trigger(\"mouseover\").then(() => {\n  cy.contains(\"Top\").click({ force: true });\n  cy.location(\"hash\").should(\"include\", \"#top\");\n});\ncy.get(\"#mousehover\").trigger(\"mouseover\").siblings().children().contains(\"Reload\").click({ force: true });\ncy.url().should(\"eq\", \"https://www.rahulshettyacademy.com/AutomationPractice/\");",
              "err": {},
              "uuid": "6ac3ac33-97a8-41a9-89ca-917daadb4045",
              "parentUUID": "124059d4-8457-4beb-b8a6-60953f31e327",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test iframe",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Test iframe",
              "timedOut": null,
              "duration": 1546,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#courses-iframe\").then(($iframe) => {\n  const body = $iframe.contents().find(\"body\");\n  cy.wrap(body).as(\"iframe\").find('[href=\"https://rahulshettyacademy.com/blog/\"]').last().click({ force: true }).then(($iframe2) => {\n    expect($iframe2[0].innerHTML).to.include(\"Blog\");\n  });\n});",
              "err": {},
              "uuid": "e43bf726-a322-45d0-b47c-d9cb8132a71a",
              "parentUUID": "124059d4-8457-4beb-b8a6-60953f31e327",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0f4628e-3979-4f18-897b-fe529326dd2b",
            "fe50259d-68c3-4d8a-95b8-55602dd83699",
            "d2c09520-7717-413d-b955-6be3d03e15fe",
            "e9699ae3-ea16-4112-a904-8a46af2fbe1b",
            "1d496fb5-cceb-48c6-a225-8307c8a75d6a",
            "fa4b54cd-c095-4e8c-91a8-aa2e4d12a45d",
            "6ac3ac33-97a8-41a9-89ca-917daadb4045",
            "e43bf726-a322-45d0-b47c-d9cb8132a71a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19821,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "10cd3b10-2c49-4d42-b724-6ca95c011b04",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\qaclickacademy.js",
      "file": "cypress\\e2e\\other\\qaclickacademy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
          "title": "Practice testing on qaclickcademy.com practice site",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify that radio buttons, autocomplete, dropdown menu and checkboxes can be used",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify that radio buttons, autocomplete, dropdown menu and checkboxes can be used",
              "timedOut": null,
              "duration": 6271,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[for=\"radio1\"]').children().check().should(\"be.checked\");\ncy.get('input[value=\"radio2\"]').check().should(\"be.checked\");\ncy.get(\"label\").find('[value=\"radio3\"]').first().check().should(\"be.checked\");\ncy.get('[placeholder=\"Type to Select Countries\"]').type(\"ro\").then(() => {\n  cy.get(\"#ui-id-1\").each((el, idx, list) => {\n    cy.contains(\"Romania\").click().then(() => {\n      cy.get(\"#autocomplete\").should(\"have.value\", \"Romania\");\n    });\n  });\n});\ncy.get(\"#dropdown-class-example\").select(\"option3\").should(\"have.value\", \"option3\");\ncy.get(\"#checkbox-example fieldset label>input\").check().should(\"be.checked\");",
              "err": {},
              "uuid": "4c8f9a89-abb1-4822-870f-523d11972c68",
              "parentUUID": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that new tab link works",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify that new tab link works",
              "timedOut": null,
              "duration": 2492,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#opentab\").invoke(\"attr\", \"target\", \"_self\").click().then(() => {\n  cy.url().should(\"eq\", \"https://www.rahulshettyacademy.com/\");\n});",
              "err": {},
              "uuid": "0c749989-c925-4617-8d47-fa34c6a53f40",
              "parentUUID": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify alert and confirm pop-ups",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Verify alert and confirm pop-ups",
              "timedOut": null,
              "duration": 2188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#name\").type(\"Bogdan\");\ncy.get(\"#alertbtn\").click();\ncy.on(\"window:alert\", (message) => {\n  expect(message).to.equal(\"Hello Bogdan, share this practice page and share your knowledge\");\n});\ncy.get(\"#name\").type(\"Bogdan\");\ncy.get(\"#confirmbtn\").click();\ncy.on(\"window:confirm\", (message) => {\n  expect(message).to.equal(\"Hello Bogdan, Are you sure you want to confirm?\");\n  return true;\n});",
              "err": {},
              "uuid": "91451a00-4920-4756-b644-35728be15877",
              "parentUUID": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Traverse table",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Traverse table",
              "timedOut": null,
              "duration": 1599,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#product td\").contains(\"Bugzilla\").next().should(\"have.text\", \"25\");\ncy.get(\"#product td\").contains(\"Resume\").siblings().parentsUntil(\"fieldset\").should(\"have.length\", 3);",
              "err": {},
              "uuid": "acb5276e-abd4-4e39-a9e6-2496aaa51912",
              "parentUUID": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check visibility of input",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Check visibility of input",
              "timedOut": null,
              "duration": 1826,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"legend\").contains(\"Element Displayed Example\").siblings(\"#displayed-text\").type(\"Bogdan\").should(\"be.visible\").and(\"have.value\", \"Bogdan\");\ncy.get(\"#hide-textbox\").click().then(() => {\n  cy.get(\"#displayed-text\").should(\"not.be.visible\").and(\"have.css\", \"display\", \"none\");\n});",
              "err": {},
              "uuid": "4c8b9544-0864-451f-9920-c545fabc9eea",
              "parentUUID": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sum all the values from the Amount column and verify it ",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Sum all the values from the Amount column and verify it ",
              "timedOut": null,
              "duration": 1413,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let totalSum = 0;\ncy.get(\".tableFixHead #product td:last-child\").each((el) => {\n  const value = parseInt(el.text());\n  totalSum += value;\n});\ncy.get(\".totalAmount\").then((el) => {\n  let numberFromText = parseInt(el.text().match(/\\d/g).join(\"\"));\n  expect(numberFromText).to.equal(totalSum);\n});",
              "err": {},
              "uuid": "4bfc8090-9073-43e2-a516-48d00638abc8",
              "parentUUID": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hover over element",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Hover over element",
              "timedOut": null,
              "duration": 2174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#mousehover\").trigger(\"mouseover\").then(() => {\n  cy.contains(\"Top\").click({ force: true });\n  cy.location(\"hash\").should(\"include\", \"#top\");\n});\ncy.get(\"#mousehover\").trigger(\"mouseover\").siblings().children().contains(\"Reload\").click({ force: true });\ncy.url().should(\"eq\", \"https://www.rahulshettyacademy.com/AutomationPractice/\");",
              "err": {},
              "uuid": "4cb4ea68-c5ea-4362-9962-7a8649581663",
              "parentUUID": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test iframe",
              "fullTitle": "Practice testing on qaclickcademy.com practice site Test iframe",
              "timedOut": null,
              "duration": 1238,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#courses-iframe\").then(($iframe) => {\n  const body = $iframe.contents().find(\"body\");\n  cy.wrap(body).as(\"iframe\").find('[href=\"https://rahulshettyacademy.com/blog/\"]').last().click({ force: true }).then(($iframe2) => {\n    expect($iframe2[0].innerHTML).to.include(\"Blog\");\n  });\n});",
              "err": {},
              "uuid": "ef564a17-9410-4680-8319-6f751808bdb7",
              "parentUUID": "e4a8dee7-bd6d-4722-8d77-5dabc84c696c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c8f9a89-abb1-4822-870f-523d11972c68",
            "0c749989-c925-4617-8d47-fa34c6a53f40",
            "91451a00-4920-4756-b644-35728be15877",
            "acb5276e-abd4-4e39-a9e6-2496aaa51912",
            "4c8b9544-0864-451f-9920-c545fabc9eea",
            "4bfc8090-9073-43e2-a516-48d00638abc8",
            "4cb4ea68-c5ea-4362-9962-7a8649581663",
            "ef564a17-9410-4680-8319-6f751808bdb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19201,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "04ae8e8d-bf34-4dab-9a11-bae3bcc07098",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\request.js",
      "file": "cypress\\e2e\\other\\request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "824bbbee-d0bf-467d-9a04-dd35f3e0dc29",
          "title": "Use cy.request to make API requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in autoTestStore with request only and check if customer cookie exists",
              "fullTitle": "Use cy.request to make API requests Login in autoTestStore with request only and check if customer cookie exists",
              "timedOut": null,
              "duration": 2532,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"https://automationteststore.com/index.php?rt=account/login\").its(\"body\").then((body) => {\n  const $html = Cypress.$(body);\n  let csrftoken, csrfinstance;\n  csrfinstance = $html.find(\"#loginFrm input[name=csrfinstance]\").val();\n  csrftoken = $html.find(\"#loginFrm input[name=csrftoken]\").val();\n  console.log(csrfinstance, csrftoken);\n  cy.request({\n    method: \"POST\",\n    url: \"https://automationteststore.com/index.php?rt=account/login\",\n    form: true,\n    body: {\n      csrftoken,\n      csrfinstance,\n      loginname: \"webdriveruni\",\n      password: \"webdriveruni\"\n    }\n  }).then((el) => {\n    console.log(el);\n  });\n});\ncy.visit(\"https://automationteststore.com/\");\ncy.getCookie(\"customer\").should(\"exist\");",
              "err": {},
              "uuid": "d4b62cf5-7c82-47ff-8964-ff58754ed54a",
              "parentUUID": "824bbbee-d0bf-467d-9a04-dd35f3e0dc29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4b62cf5-7c82-47ff-8964-ff58754ed54a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2532,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "de9699bf-b3b6-41f8-b017-6d232b6983aa",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\request.js",
      "file": "cypress\\e2e\\other\\request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48882437-9db3-4e80-b893-01e9d5d831b6",
          "title": "Use cy.request to make API requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login in autoTestStore with request only and check if customer cookie exists",
              "fullTitle": "Use cy.request to make API requests Login in autoTestStore with request only and check if customer cookie exists",
              "timedOut": null,
              "duration": 2273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"https://automationteststore.com/index.php?rt=account/login\").its(\"body\").then((body) => {\n  const $html = Cypress.$(body);\n  let csrftoken, csrfinstance;\n  csrfinstance = $html.find(\"#loginFrm input[name=csrfinstance]\").val();\n  csrftoken = $html.find(\"#loginFrm input[name=csrftoken]\").val();\n  console.log(csrfinstance, csrftoken);\n  cy.request({\n    method: \"POST\",\n    url: \"https://automationteststore.com/index.php?rt=account/login\",\n    form: true,\n    body: {\n      csrftoken,\n      csrfinstance,\n      loginname: \"webdriveruni\",\n      password: \"webdriveruni\"\n    }\n  }).then((el) => {\n    console.log(el);\n  });\n});\ncy.visit(\"https://automationteststore.com/\");\ncy.getCookie(\"customer\").should(\"exist\");",
              "err": {},
              "uuid": "a7f90389-5c99-49d4-874d-91a59b76b0e7",
              "parentUUID": "48882437-9db3-4e80-b893-01e9d5d831b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7f90389-5c99-49d4-874d-91a59b76b0e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2273,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5c8e2d94-7f24-488f-ad0b-e13897b4bbc7",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\same-origin-policy.js",
      "file": "cypress\\e2e\\other\\same-origin-policy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "44154b5c-0406-49ce-a7f9-0eed0783dbb6",
          "title": "Cypress web security",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Use cy.origin  to visit different super-domains",
              "fullTitle": "Cypress web security Use cy.origin  to visit different super-domains",
              "timedOut": null,
              "duration": 5655,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com/\");\ncy.get(\"#dropdown-checkboxes-radiobuttons\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.origin(\"https://automationteststore.com/\", () => {\n  cy.visit(\"https://automationteststore.com/\");\n  cy.url().should(\"eq\", \"https://automationteststore.com/\");\n});",
              "err": {},
              "uuid": "a4e821b6-4b8a-4427-b0ef-ac9e77bc1f67",
              "parentUUID": "44154b5c-0406-49ce-a7f9-0eed0783dbb6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4e821b6-4b8a-4427-b0ef-ac9e77bc1f67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5655,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "33c7f536-72fd-45a9-af4c-ef411c44f6b3",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\same-origin-policy.js",
      "file": "cypress\\e2e\\other\\same-origin-policy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d4aa64d6-1063-41dc-b91e-f3214797d003",
          "title": "Cypress web security",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Use cy.origin  to visit different super-domains",
              "fullTitle": "Cypress web security Use cy.origin  to visit different super-domains",
              "timedOut": null,
              "duration": 6065,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com/\");\ncy.get(\"#dropdown-checkboxes-radiobuttons\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.origin(\"https://automationteststore.com/\", () => {\n  cy.visit(\"https://automationteststore.com/\");\n  cy.url().should(\"eq\", \"https://automationteststore.com/\");\n});",
              "err": {},
              "uuid": "0b35de9d-d2be-4f82-a53a-492e5f17b1c0",
              "parentUUID": "d4aa64d6-1063-41dc-b91e-f3214797d003",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b35de9d-d2be-4f82-a53a-492e5f17b1c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6065,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6897a7e2-30f0-4ac9-8c62-7bcf5873693c",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\sessions.js",
      "file": "cypress\\e2e\\other\\sessions.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bde7730d-4807-4a37-b717-05b32a4a8045",
          "title": "Test sessions  via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to record sessions for test1 ",
              "fullTitle": "Test sessions  via Automation Test Store Should be able to record sessions for test1 ",
              "timedOut": null,
              "duration": 7161,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart\").click();\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();",
              "err": {},
              "uuid": "335a75ba-46dc-44ad-a07d-a938f3def5cd",
              "parentUUID": "bde7730d-4807-4a37-b717-05b32a4a8045",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to record sessions for this test2 ",
              "fullTitle": "Test sessions  via Automation Test Store Should be able to record sessions for this test2 ",
              "timedOut": null,
              "duration": 2258,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart\").click();\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();",
              "err": {},
              "uuid": "9d958c91-529a-4ebc-adbd-c0acf5e2bcfc",
              "parentUUID": "bde7730d-4807-4a37-b717-05b32a4a8045",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test3",
              "fullTitle": "Test sessions  via Automation Test Store Test3",
              "timedOut": null,
              "duration": 6862,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\"#block_frame_bestsellers_1771 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\".cart\").click();\ncy.get(\":nth-child(1) > .active\").click();\ncy.get(\"#block_frame_special_1772 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\".cart\").click();\ncy.get(\".col-md-6 > .btn-default\").click();\ncy.get(\".nav-pills > :nth-child(1) > .active\").click();",
              "err": {},
              "uuid": "9a4f0b3d-ccb3-48bb-a6cc-5f1c7636d139",
              "parentUUID": "bde7730d-4807-4a37-b717-05b32a4a8045",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "335a75ba-46dc-44ad-a07d-a938f3def5cd",
            "9d958c91-529a-4ebc-adbd-c0acf5e2bcfc",
            "9a4f0b3d-ccb3-48bb-a6cc-5f1c7636d139"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16281,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "22f9fded-3e5d-438e-b2fe-1e37f19cac30",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\spyStub.js",
      "file": "cypress\\e2e\\other\\spyStub.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c7f8021c-41a1-4bb9-94f0-24c865820813",
          "title": "Test  spys and stubs ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Stub on a function and its return value ",
              "fullTitle": "Test  spys and stubs  Stub on a function and its return value ",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const logging = {\n  clg(message) {\n    cy.log(\"Hi there \" + message);\n    return 5;\n  }\n};\nconst stub = cy.stub(logging, \"clg\").callsFake((args) => {\n  cy.log(\"hello \" + args);\n  return 20;\n}).as(\"stubLog\");\nlogging.clg(\"bbog\");\nexpect(logging.clg).to.have.returned(20);",
              "err": {},
              "uuid": "d9b9f815-d9c4-460e-92a5-d945268b74b0",
              "parentUUID": "c7f8021c-41a1-4bb9-94f0-24c865820813",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9b9f815-d9c4-460e-92a5-d945268b74b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 255,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "59cc339e-6067-41a1-80f0-bf445aceeaa4",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\sessions.js",
      "file": "cypress\\e2e\\other\\sessions.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8c47fae-6ec5-44e7-ba99-e2b9721f4792",
          "title": "Test sessions  via Automation Test Store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to record sessions for test1 ",
              "fullTitle": "Test sessions  via Automation Test Store Should be able to record sessions for test1 ",
              "timedOut": null,
              "duration": 6535,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart\").click();\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();",
              "err": {},
              "uuid": "6b03a4bc-4266-4f39-b82f-b4261c5a9ab3",
              "parentUUID": "b8c47fae-6ec5-44e7-ba99-e2b9721f4792",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to record sessions for this test2 ",
              "fullTitle": "Test sessions  via Automation Test Store Should be able to record sessions for this test2 ",
              "timedOut": null,
              "duration": 2529,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart\").click();\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();",
              "err": {},
              "uuid": "4b6a0144-2557-438f-acb3-558781c28792",
              "parentUUID": "b8c47fae-6ec5-44e7-ba99-e2b9721f4792",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test3",
              "fullTitle": "Test sessions  via Automation Test Store Test3",
              "timedOut": null,
              "duration": 7203,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://automationteststore.com/\");\ncy.get(\"#block_frame_latest_1770 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\"#block_frame_bestsellers_1771 > .thumbnails > :nth-child(3) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\".cart\").click();\ncy.get(\":nth-child(1) > .active\").click();\ncy.get(\"#block_frame_special_1772 > .thumbnails > :nth-child(2) > .thumbnail > .pricetag > .productcart > .fa\").click();\ncy.get(\".cart\").click();\ncy.get(\".col-md-6 > .btn-default\").click();\ncy.get(\".nav-pills > :nth-child(1) > .active\").click();",
              "err": {},
              "uuid": "5692ff5b-929c-483d-a26c-131624a427f1",
              "parentUUID": "b8c47fae-6ec5-44e7-ba99-e2b9721f4792",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b03a4bc-4266-4f39-b82f-b4261c5a9ab3",
            "4b6a0144-2557-438f-acb3-558781c28792",
            "5692ff5b-929c-483d-a26c-131624a427f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5abd8c85-0751-4a4c-96ec-4df94b433f8f",
      "title": "",
      "fullFile": "cypress\\e2e\\other\\spyStub.js",
      "file": "cypress\\e2e\\other\\spyStub.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cde838f-79d6-44e2-8624-97eeefb0e3db",
          "title": "Test  spys and stubs ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Stub on a function and its return value ",
              "fullTitle": "Test  spys and stubs  Stub on a function and its return value ",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const logging = {\n  clg(message) {\n    cy.log(\"Hi there \" + message);\n    return 5;\n  }\n};\nconst stub = cy.stub(logging, \"clg\").callsFake((args) => {\n  cy.log(\"hello \" + args);\n  return 20;\n}).as(\"stubLog\");\nlogging.clg(\"bbog\");\nexpect(logging.clg).to.have.returned(20);",
              "err": {},
              "uuid": "0fe67767-543c-4347-9cea-bea708010e33",
              "parentUUID": "4cde838f-79d6-44e2-8624-97eeefb0e3db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fe67767-543c-4347-9cea-bea708010e33"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 140,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c27f16d2-2c58-4652-b40b-7c4bf1a8ff12",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06cbb78c-b5ff-44e3-93a3-3a24e3cce846",
          "title": "Verify autocomplete dropdown list via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific product via autocomplete list",
              "fullTitle": "Verify autocomplete dropdown list via webdriveruni Select specific product via autocomplete list",
              "timedOut": null,
              "duration": 2355,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#autocomplete-textfield\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#myInput\").type(\"A\");\ncy.get(\"#myInputautocomplete-list > *\").each(($el, index, $list) => {\n  const prod = $el.text();\n  const productToSelect = \"Avacado\";\n  if (prod === productToSelect) {\n    $el.trigger(\"click\");\n    cy.get(\"#submit-button\").click();\n    cy.url().should(\"include\", productToSelect);\n  }\n}).then((el) => {\n  console.log(el);\n  cy.get(\"#myInput\").type(\"G\");\n  cy.get(\"#myInputautocomplete-list > *\").each(($el, index, $list) => {\n    const prod = $el.text();\n    const productToSelect = \"Grapes\";\n    if (prod === productToSelect) {\n      $el.trigger(\"click\");\n      cy.get(\"#submit-button\").click();\n      cy.url().should(\"include\", productToSelect);\n    }\n  });\n});",
              "err": {},
              "uuid": "3c092530-71d4-4ff9-9ed7-d37b6491bde0",
              "parentUUID": "06cbb78c-b5ff-44e3-93a3-3a24e3cce846",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c092530-71d4-4ff9-9ed7-d37b6491bde0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2355,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f0cf7aef-e5c6-4146-bfbc-7a2462c10e7c",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\autocomplete-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b27ec37-b7e5-4335-971d-4c87ce74799e",
          "title": "Verify autocomplete dropdown list via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific product via autocomplete list",
              "fullTitle": "Verify autocomplete dropdown list via webdriveruni Select specific product via autocomplete list",
              "timedOut": null,
              "duration": 2282,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#autocomplete-textfield\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#myInput\").type(\"A\");\ncy.get(\"#myInputautocomplete-list > *\").each(($el, index, $list) => {\n  const prod = $el.text();\n  const productToSelect = \"Avacado\";\n  if (prod === productToSelect) {\n    $el.trigger(\"click\");\n    cy.get(\"#submit-button\").click();\n    cy.url().should(\"include\", productToSelect);\n  }\n}).then((el) => {\n  console.log(el);\n  cy.get(\"#myInput\").type(\"G\");\n  cy.get(\"#myInputautocomplete-list > *\").each(($el, index, $list) => {\n    const prod = $el.text();\n    const productToSelect = \"Grapes\";\n    if (prod === productToSelect) {\n      $el.trigger(\"click\");\n      cy.get(\"#submit-button\").click();\n      cy.url().should(\"include\", productToSelect);\n    }\n  });\n});",
              "err": {},
              "uuid": "08349b4c-22f4-49cb-8a97-b0fd0806aec5",
              "parentUUID": "7b27ec37-b7e5-4335-971d-4c87ce74799e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08349b4c-22f4-49cb-8a97-b0fd0806aec5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1c1f6467-1a6a-4e49-8e2a-c149c588ad05",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "file": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3622433-6683-49bd-b38c-2e234b160a34",
          "title": "Validate Webdriveruni homepage links",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should redirect to the correct pages",
              "fullTitle": "Validate Webdriveruni homepage links Should redirect to the correct pages",
              "timedOut": null,
              "duration": 4503,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#contact-us\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"contactus\");\ncy.go(\"back\");\ncy.reload(true);\ncy.url().should(\"include\", \"https://webdriveruniversity.com\");\ncy.go(\"forward\");\ncy.url().should(\"include\", \"contactus\");\ncy.go(\"back\");\ncy.get(\"#login-portal\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"Login-Portal\");\ncy.go(\"back\");\ncy.get(\"#to-do-list\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"To-Do-List\");\ncy.go(\"back\");",
              "err": {},
              "uuid": "83538090-2db3-44cd-aa99-f9bc6e23b357",
              "parentUUID": "b3622433-6683-49bd-b38c-2e234b160a34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83538090-2db3-44cd-aa99-f9bc6e23b357"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4503,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f2a1aeb-3f8f-4832-b82d-0002c6deee04",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\checkboxes.js",
      "file": "cypress\\e2e\\webdriver-uni\\checkboxes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "60086782-cd53-4eca-b935-d4e9c5f8a0e4",
          "title": "Verify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 657,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#checkboxes > :nth-child(1) > input\").as(\"option-1\");\ncy.get(\"@option-1\").check().should(\"be.checked\");",
              "err": {},
              "uuid": "80831e0e-1666-4481-9fc6-c8f9f16015bd",
              "parentUUID": "60086782-cd53-4eca-b935-d4e9c5f8a0e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Uncheck and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Uncheck and validate checkbox",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\":nth-child(5) > input\").as(\"option-3\");\ncy.get(\"@option-3\").uncheck().should(\"not.be.checked\");",
              "err": {},
              "uuid": "8a5fce30-89f9-437e-9903-fc41b9d26a98",
              "parentUUID": "60086782-cd53-4eca-b935-d4e9c5f8a0e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check multiple checkboxs",
              "fullTitle": "Verify checkboxes via webdriveruni Check multiple checkboxs",
              "timedOut": null,
              "duration": 614,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type = 'checkbox']\").check([\"option-1\", \"option-2\", \"option-3\", \"option-4\"]).should(\"be.checked\");",
              "err": {},
              "uuid": "337d541f-cf97-46d4-be1a-339446a87c68",
              "parentUUID": "60086782-cd53-4eca-b935-d4e9c5f8a0e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cypress-studio-test",
              "fullTitle": "Verify checkboxes via webdriveruni cypress-studio-test",
              "timedOut": null,
              "duration": 688,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[value=\"green\"]').check();\ncy.get('[value=\"blue\"]').check();\ncy.get('[value=\"yellow\"]').check();\ncy.get('#radio-buttons > [value=\"orange\"]').check();\ncy.get('[value=\"purple\"]').check();",
              "err": {},
              "uuid": "4b0fc786-eb9d-4dc0-81c9-ba2dc4d4fc58",
              "parentUUID": "60086782-cd53-4eca-b935-d4e9c5f8a0e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80831e0e-1666-4481-9fc6-c8f9f16015bd",
            "8a5fce30-89f9-437e-9903-fc41b9d26a98",
            "337d541f-cf97-46d4-be1a-339446a87c68",
            "4b0fc786-eb9d-4dc0-81c9-ba2dc4d4fc58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2301,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "35413d25-f121-41f7-acbc-61c0387103a4",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "file": "cypress\\e2e\\webdriver-uni\\browser-navigation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "04f82058-6c16-4084-a5dc-3fba6e1c9394",
          "title": "Validate Webdriveruni homepage links",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should redirect to the correct pages",
              "fullTitle": "Validate Webdriveruni homepage links Should redirect to the correct pages",
              "timedOut": null,
              "duration": 5091,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#contact-us\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"contactus\");\ncy.go(\"back\");\ncy.reload(true);\ncy.url().should(\"include\", \"https://webdriveruniversity.com\");\ncy.go(\"forward\");\ncy.url().should(\"include\", \"contactus\");\ncy.go(\"back\");\ncy.get(\"#login-portal\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"Login-Portal\");\ncy.go(\"back\");\ncy.get(\"#to-do-list\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.url().should(\"include\", \"To-Do-List\");\ncy.go(\"back\");",
              "err": {},
              "uuid": "e53dd665-4516-48a7-8cf4-6ad75ebf495b",
              "parentUUID": "04f82058-6c16-4084-a5dc-3fba6e1c9394",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e53dd665-4516-48a7-8cf4-6ad75ebf495b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5091,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0212acf4-6586-4378-92f7-b95032ba3e0b",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\checkboxes.js",
      "file": "cypress\\e2e\\webdriver-uni\\checkboxes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0f23ca6-a172-44c6-88ba-642a3984adea",
          "title": "Verify checkboxes via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Check and validate checkbox",
              "timedOut": null,
              "duration": 872,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#checkboxes > :nth-child(1) > input\").as(\"option-1\");\ncy.get(\"@option-1\").check().should(\"be.checked\");",
              "err": {},
              "uuid": "fb137424-a273-4d66-bd4d-c877f45b3d6f",
              "parentUUID": "e0f23ca6-a172-44c6-88ba-642a3984adea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Uncheck and validate checkbox",
              "fullTitle": "Verify checkboxes via webdriveruni Uncheck and validate checkbox",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\":nth-child(5) > input\").as(\"option-3\");\ncy.get(\"@option-3\").uncheck().should(\"not.be.checked\");",
              "err": {},
              "uuid": "b2509539-ba89-4936-919d-bc35d09f2e89",
              "parentUUID": "e0f23ca6-a172-44c6-88ba-642a3984adea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check multiple checkboxs",
              "fullTitle": "Verify checkboxes via webdriveruni Check multiple checkboxs",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"input[type = 'checkbox']\").check([\"option-1\", \"option-2\", \"option-3\", \"option-4\"]).should(\"be.checked\");",
              "err": {},
              "uuid": "f9439b0d-4331-4166-a85b-6151dd8765f3",
              "parentUUID": "e0f23ca6-a172-44c6-88ba-642a3984adea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cypress-studio-test",
              "fullTitle": "Verify checkboxes via webdriveruni cypress-studio-test",
              "timedOut": null,
              "duration": 682,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[value=\"green\"]').check();\ncy.get('[value=\"blue\"]').check();\ncy.get('[value=\"yellow\"]').check();\ncy.get('#radio-buttons > [value=\"orange\"]').check();\ncy.get('[value=\"purple\"]').check();",
              "err": {},
              "uuid": "94de9bd3-4df5-4cf9-8a9a-672960182163",
              "parentUUID": "e0f23ca6-a172-44c6-88ba-642a3984adea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb137424-a273-4d66-bd4d-c877f45b3d6f",
            "b2509539-ba89-4936-919d-bc35d09f2e89",
            "f9439b0d-4331-4166-a85b-6151dd8765f3",
            "94de9bd3-4df5-4cf9-8a9a-672960182163"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2459,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d4b0e132-4b98-43a7-a08e-21c720ec808a",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\contact-us.spec.js",
      "file": "cypress\\e2e\\webdriver-uni\\contact-us.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0b99096-c811-4066-b687-4233ab6e8bbc",
          "title": "test Contact us form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a succesful submission via the contacts us form",
              "fullTitle": "test Contact us form via WebdriverUni Should be able to submit a succesful submission via the contacts us form",
              "timedOut": null,
              "duration": 2966,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should(\"have.property\", \"charset\").and(\"eq\", \"UTF-8\");\ncy.title().should(\"include\", \"WebDriver | Contact Us\");\ncy.url().should(\"include\", \"contactus\");\ncontact_Us_PO.contactForm_Submission(this.data.first_name, this.data.last_name, this.data.email, \"Hi there\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "b68d986e-f73d-47c3-a1fd-15cad620785e",
              "parentUUID": "e0b99096-c811-4066-b687-4233ab6e8bbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a succesful submission via the contacts us form as all fields are required",
              "fullTitle": "test Contact us form via WebdriverUni Should not be able to submit a succesful submission via the contacts us form as all fields are required",
              "timedOut": null,
              "duration": 2531,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contact_Us_PO.contactForm_Submission(this.data.first_name, this.data.last_name, this.data.email, \"Hi there\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "69033c53-ff5c-4479-b621-1617a0893ea4",
              "parentUUID": "e0b99096-c811-4066-b687-4233ab6e8bbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b68d986e-f73d-47c3-a1fd-15cad620785e",
            "69033c53-ff5c-4479-b621-1617a0893ea4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5497,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dda497ca-09a2-4ed9-8742-09b0157d30f7",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "file": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0e84b8ef-f6c1-4801-bff7-685e341b3a3b",
          "title": "Handling data via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate and assert the  age of a given use based on last name",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the  age of a given use based on last name",
              "timedOut": null,
              "duration": 1185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#thumbnail-1 tr td:nth-child(2)\").each((el) => {\n  if (el.text().includes(\"Woods\")) {\n    expect(el.next().text()).to.equal(\"80\");\n  }\n});",
              "err": {},
              "uuid": "c3a0178d-f88c-4831-bf6f-622ea606efc1",
              "parentUUID": "0e84b8ef-f6c1-4801-bff7-685e341b3a3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3a0178d-f88c-4831-bf6f-622ea606efc1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d3ca6a78-a278-4245-aa5b-4f37789b1a2c",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\contact-us.spec.js",
      "file": "cypress\\e2e\\webdriver-uni\\contact-us.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc61e632-ea16-48da-a786-cb0b30bd17ef",
          "title": "test Contact us form via WebdriverUni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to submit a succesful submission via the contacts us form",
              "fullTitle": "test Contact us form via WebdriverUni Should be able to submit a succesful submission via the contacts us form",
              "timedOut": null,
              "duration": 2780,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.document().should(\"have.property\", \"charset\").and(\"eq\", \"UTF-8\");\ncy.title().should(\"include\", \"WebDriver | Contact Us\");\ncy.url().should(\"include\", \"contactus\");\ncontact_Us_PO.contactForm_Submission(this.data.first_name, this.data.last_name, this.data.email, \"Hi there\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "3543c71b-a62f-4ab6-a831-bf436e74b754",
              "parentUUID": "dc61e632-ea16-48da-a786-cb0b30bd17ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to submit a succesful submission via the contacts us form as all fields are required",
              "fullTitle": "test Contact us form via WebdriverUni Should not be able to submit a succesful submission via the contacts us form as all fields are required",
              "timedOut": null,
              "duration": 2566,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "contact_Us_PO.contactForm_Submission(this.data.first_name, this.data.last_name, this.data.email, \"Hi there\", \"h1\", \"Thank You for your Message!\");",
              "err": {},
              "uuid": "1870e8db-9856-4823-90ad-f30928edca2b",
              "parentUUID": "dc61e632-ea16-48da-a786-cb0b30bd17ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3543c71b-a62f-4ab6-a831-bf436e74b754",
            "1870e8db-9856-4823-90ad-f30928edca2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5346,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fbe44b2d-0657-4118-b9f0-135dab8853ab",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\date-picker.js",
      "file": "cypress\\e2e\\webdriver-uni\\date-picker.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b88badf9-fa1f-44f6-a16b-99c1abd4202f",
          "title": "Test datepicker via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select date from the datepicker",
              "fullTitle": "Test datepicker via webdriveruni Select date from the datepicker",
              "timedOut": null,
              "duration": 2318,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://webdriveruniversity.com/\");\ncy.get(\"#datepicker\").invoke(\"removeAttr\", \"target\").click({ force: true });\ncy.get(\"#datepicker\").click();\nlet date = new Date();\ndate.setDate(date.getDate() + 71);\nlet futureYear = date.getFullYear();\nlet futureMonth = date.toLocaleString(\"default\", { month: \"long\" });\nlet futureDay = date.getDate();\ncy.log(futureDay + futureMonth + futureYear);\nfunction selectMonthAndYear() {\n  cy.get(\".datepicker-dropdown\").find(\".datepicker-switch\").first().then((currDate) => {\n    if (!currDate.text().includes(futureYear)) {\n      cy.get(\".next\").first().click();\n      selectMonthAndYear();\n    }\n  }).then(() => {\n    cy.get(\".datepicker-dropdown\").find(\".datepicker-switch\").first().then((currDate) => {\n      if (!currDate.text().includes(futureMonth)) {\n        cy.get(\".next\").first().click();\n        selectMonthAndYear();\n      }\n    });\n  });\n}\nfunction selectFutureDay() {\n  cy.get(\"[class=day]\").contains(futureDay).click();\n}\nselectMonthAndYear();\nselectFutureDay();",
              "err": {},
              "uuid": "a82644c6-ef76-46eb-9eec-45008b18f4b4",
              "parentUUID": "b88badf9-fa1f-44f6-a16b-99c1abd4202f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a82644c6-ef76-46eb-9eec-45008b18f4b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2318,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "981a4ad2-643c-42a5-aa63-c5f69bd5d9bb",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "file": "cypress\\e2e\\webdriver-uni\\data-tables.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "747210d1-3c2b-49d8-ab77-8f91abde7585",
          "title": "Handling data via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate and assert the  age of a given use based on last name",
              "fullTitle": "Handling data via webdriveruni Calculate and assert the  age of a given use based on last name",
              "timedOut": null,
              "duration": 1455,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#thumbnail-1 tr td:nth-child(2)\").each((el) => {\n  if (el.text().includes(\"Woods\")) {\n    expect(el.next().text()).to.equal(\"80\");\n  }\n});",
              "err": {},
              "uuid": "59507e5f-8ab4-49ee-a857-6d7f4a30681b",
              "parentUUID": "747210d1-3c2b-49d8-ab77-8f91abde7585",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59507e5f-8ab4-49ee-a857-6d7f4a30681b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "578b5072-dc4d-49b1-8312-0040c493fba6",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\file-upload.js",
      "file": "cypress\\e2e\\webdriver-uni\\file-upload.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cd919c5-2d8e-4807-8e38-1a818d997c55",
          "title": "Test file upload via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Upload a file...",
              "fullTitle": "Test file upload via webdriveruni Upload a file...",
              "timedOut": null,
              "duration": 1088,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#file-upload\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#myFile\").selectFile(\"cypress/fixtures/laptop.png\");\ncy.get(\"#submit-button\").click();",
              "err": {},
              "uuid": "eec4e3ce-33d1-407a-9a66-c44e21c5664f",
              "parentUUID": "4cd919c5-2d8e-4807-8e38-1a818d997c55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upload no file",
              "fullTitle": "Test file upload via webdriveruni Upload no file",
              "timedOut": null,
              "duration": 776,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#file-upload\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#myFile\");\ncy.get(\"#submit-button\").click();",
              "err": {},
              "uuid": "338e104b-f9cd-46a9-bcbc-c7d2b2527681",
              "parentUUID": "4cd919c5-2d8e-4807-8e38-1a818d997c55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eec4e3ce-33d1-407a-9a66-c44e21c5664f",
            "338e104b-f9cd-46a9-bcbc-c7d2b2527681"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1864,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0a9677ce-479a-4785-a3de-dedebdd91b30",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\date-picker.js",
      "file": "cypress\\e2e\\webdriver-uni\\date-picker.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8d6c563a-f571-455a-9af1-bdda1a8ca5bb",
          "title": "Test datepicker via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select date from the datepicker",
              "fullTitle": "Test datepicker via webdriveruni Select date from the datepicker",
              "timedOut": null,
              "duration": 2278,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"http://webdriveruniversity.com/\");\ncy.get(\"#datepicker\").invoke(\"removeAttr\", \"target\").click({ force: true });\ncy.get(\"#datepicker\").click();\nlet date = new Date();\ndate.setDate(date.getDate() + 71);\nlet futureYear = date.getFullYear();\nlet futureMonth = date.toLocaleString(\"default\", { month: \"long\" });\nlet futureDay = date.getDate();\ncy.log(futureDay + futureMonth + futureYear);\nfunction selectMonthAndYear() {\n  cy.get(\".datepicker-dropdown\").find(\".datepicker-switch\").first().then((currDate) => {\n    if (!currDate.text().includes(futureYear)) {\n      cy.get(\".next\").first().click();\n      selectMonthAndYear();\n    }\n  }).then(() => {\n    cy.get(\".datepicker-dropdown\").find(\".datepicker-switch\").first().then((currDate) => {\n      if (!currDate.text().includes(futureMonth)) {\n        cy.get(\".next\").first().click();\n        selectMonthAndYear();\n      }\n    });\n  });\n}\nfunction selectFutureDay() {\n  cy.get(\"[class=day]\").contains(futureDay).click();\n}\nselectMonthAndYear();\nselectFutureDay();",
              "err": {},
              "uuid": "c8f57a70-4a3f-4859-805d-d608d1362e71",
              "parentUUID": "8d6c563a-f571-455a-9af1-bdda1a8ca5bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8f57a70-4a3f-4859-805d-d608d1362e71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2278,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3e756f98-9e54-4492-8fd2-f3dfb58cff70",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\iframe.js",
      "file": "cypress\\e2e\\webdriver-uni\\iframe.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "57bec236-cf2d-453f-a883-d14b1d540361",
          "title": "Handling Iframe and Modals",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Handling webdriveruni iframe and modal",
              "fullTitle": "Handling Iframe and Modals Handling webdriveruni iframe and modal",
              "timedOut": null,
              "duration": 2132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#iframe\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#frame\").then(($iframe) => {\n  console.log($iframe.contents());\n  const body = $iframe.contents().find(\"body\");\n  cy.wrap(body).as(\"iframe\");\n});\ncy.get(\"@iframe\").find(\"#button-find-out-more\").click();\ncy.get(\"@iframe\").find(\"#myModal\").as(\"modal\");\ncy.get(\"@modal\").should((modalTag) => {\n  const text = modalTag.text();\n  expect(text).include(\"Welcome to webdriveruniversity.com we sell a wide range of electrical goods such as laptops, game consoles, cameras\");\n});\ncy.get(\"@modal\").contains(\"Close\").click();",
              "err": {},
              "uuid": "cfefd18f-e742-4825-9e91-400cc53c673c",
              "parentUUID": "57bec236-cf2d-453f-a883-d14b1d540361",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfefd18f-e742-4825-9e91-400cc53c673c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "69088835-901a-4aab-956c-4c32bcc634d6",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\file-upload.js",
      "file": "cypress\\e2e\\webdriver-uni\\file-upload.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a879363-30ca-42cd-80c3-decb9add7331",
          "title": "Test file upload via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Upload a file...",
              "fullTitle": "Test file upload via webdriveruni Upload a file...",
              "timedOut": null,
              "duration": 1456,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#file-upload\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#myFile\").selectFile(\"cypress/fixtures/laptop.png\");\ncy.get(\"#submit-button\").click();",
              "err": {},
              "uuid": "8e6bfef3-4d9d-44bb-a0e1-7eef1b6b5f25",
              "parentUUID": "8a879363-30ca-42cd-80c3-decb9add7331",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Upload no file",
              "fullTitle": "Test file upload via webdriveruni Upload no file",
              "timedOut": null,
              "duration": 838,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#file-upload\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#myFile\");\ncy.get(\"#submit-button\").click();",
              "err": {},
              "uuid": "04819925-f86a-4994-8a66-3c0163186a98",
              "parentUUID": "8a879363-30ca-42cd-80c3-decb9add7331",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e6bfef3-4d9d-44bb-a0e1-7eef1b6b5f25",
            "04819925-f86a-4994-8a66-3c0163186a98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2294,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "26067ef6-8317-428a-b2a6-f2990dc9b484",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\js-alerts.js",
      "file": "cypress\\e2e\\webdriver-uni\\js-alerts.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c1e7af0b-7df6-4845-8c42-d2030b0fd23a",
          "title": "Handle js alert",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate js confirm alert box using a stub",
              "fullTitle": "Handle js alert Validate js confirm alert box using a stub",
              "timedOut": null,
              "duration": 1955,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#popup-alerts\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\nconst stub = cy.stub();\ncy.on(\"window:confirm\", stub);\ncy.get(\"#button4\").click().then(() => {\n  expect(stub.getCall(0)).to.be.calledWith(\"Press a button!\");\n  console.log(stub.getCall(0));\n});",
              "err": {},
              "uuid": "337fbc00-9499-4e4e-88b6-5a1b970a1ad5",
              "parentUUID": "c1e7af0b-7df6-4845-8c42-d2030b0fd23a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "337fbc00-9499-4e4e-88b6-5a1b970a1ad5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1955,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f891f6ad-3500-42f7-99a0-ce1a44d3e829",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\iframe.js",
      "file": "cypress\\e2e\\webdriver-uni\\iframe.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "769e6278-d79c-4b49-a1ed-39b8012b1152",
          "title": "Handling Iframe and Modals",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Handling webdriveruni iframe and modal",
              "fullTitle": "Handling Iframe and Modals Handling webdriveruni iframe and modal",
              "timedOut": null,
              "duration": 2160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#iframe\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#frame\").then(($iframe) => {\n  console.log($iframe.contents());\n  const body = $iframe.contents().find(\"body\");\n  cy.wrap(body).as(\"iframe\");\n});\ncy.get(\"@iframe\").find(\"#button-find-out-more\").click();\ncy.get(\"@iframe\").find(\"#myModal\").as(\"modal\");\ncy.get(\"@modal\").should((modalTag) => {\n  const text = modalTag.text();\n  expect(text).include(\"Welcome to webdriveruniversity.com we sell a wide range of electrical goods such as laptops, game consoles, cameras\");\n});\ncy.get(\"@modal\").contains(\"Close\").click();",
              "err": {},
              "uuid": "ba4e5b19-c6c4-452e-9d6c-5f9306b02651",
              "parentUUID": "769e6278-d79c-4b49-a1ed-39b8012b1152",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba4e5b19-c6c4-452e-9d6c-5f9306b02651"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8cbc09db-db3b-4075-a9db-0c799910ccc1",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\js-alerts.js",
      "file": "cypress\\e2e\\webdriver-uni\\js-alerts.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7650813f-228c-459b-850b-feb4562828c5",
          "title": "Handle js alert",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate js confirm alert box using a stub",
              "fullTitle": "Handle js alert Validate js confirm alert box using a stub",
              "timedOut": null,
              "duration": 1450,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#popup-alerts\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\nconst stub = cy.stub();\ncy.on(\"window:confirm\", stub);\ncy.get(\"#button4\").click().then(() => {\n  expect(stub.getCall(0)).to.be.calledWith(\"Press a button!\");\n  console.log(stub.getCall(0));\n});",
              "err": {},
              "uuid": "1e084eba-4550-4b9b-a405-9de33936425f",
              "parentUUID": "7650813f-228c-459b-850b-feb4562828c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e084eba-4550-4b9b-a405-9de33936425f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1450,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4b8f64e2-41c1-4fee-9623-9c41647f19cd",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\mouse-action.js",
      "file": "cypress\\e2e\\webdriver-uni\\mouse-action.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "58bec95f-577e-4728-85d3-4ee0ec329a91",
          "title": "Test mouse actions via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Scroll element into view",
              "fullTitle": "Test mouse actions via webdriveruni Scroll element into view",
              "timedOut": null,
              "duration": 867,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").scrollIntoView().invoke(\"attr\", \"target\", \"_self\").click({ force: true });",
              "err": {},
              "uuid": "ef249b08-7ee1-4a66-828e-23c287641dc9",
              "parentUUID": "58bec95f-577e-4728-85d3-4ee0ec329a91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to drag and drop a dragable item",
              "fullTitle": "Test mouse actions via webdriveruni I should be able to drag and drop a dragable item",
              "timedOut": null,
              "duration": 1123,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#draggable\").scrollIntoView().trigger(\"mousedown\", { button: 1 });\ncy.get(\"#droppable\").trigger(\"mousemove\", { force: true });",
              "err": {},
              "uuid": "6a9b0cd7-6f92-4b8d-a947-545c73e5a9f7",
              "parentUUID": "58bec95f-577e-4728-85d3-4ee0ec329a91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to perform a double mouse click",
              "fullTitle": "Test mouse actions via webdriveruni I should be able to perform a double mouse click",
              "timedOut": null,
              "duration": 539,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#double-click\").dblclick();",
              "err": {},
              "uuid": "e86ae365-f79f-4899-91d0-75ac6cdc0a36",
              "parentUUID": "58bec95f-577e-4728-85d3-4ee0ec329a91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to hold down the left mouse button on a given element",
              "fullTitle": "Test mouse actions via webdriveruni I should be able to hold down the left mouse button on a given element",
              "timedOut": null,
              "duration": 553,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#click-box\").trigger(\"mousedown\", { button: 1 }).then(($el) => {\n  expect($el).to.have.css(\"background-color\", \"rgb(0, 255, 0)\");\n});",
              "err": {},
              "uuid": "82767b06-0946-48c2-a4d7-29f29471a5cd",
              "parentUUID": "58bec95f-577e-4728-85d3-4ee0ec329a91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to hover over a specific element and click on first option in dropdown menu",
              "fullTitle": "Test mouse actions via webdriveruni I should be able to hover over a specific element and click on first option in dropdown menu",
              "timedOut": null,
              "duration": 628,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#div-hover\").contains(\"Hover Over Me Third!\").trigger(\"mouseover\").then((el) => {\n  cy.get(\"#div-hover > div:nth-child(3) > div > a:nth-child(2)\").click({\n    force: true\n  });\n  cy.on(\"window:alert\", (alertMessage) => {\n    expect(alertMessage).to.equal(\"Well done you clicked on the link!\");\n  });\n});",
              "err": {},
              "uuid": "b85faf4e-dfdb-47e7-86b8-f472882b840f",
              "parentUUID": "58bec95f-577e-4728-85d3-4ee0ec329a91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef249b08-7ee1-4a66-828e-23c287641dc9",
            "6a9b0cd7-6f92-4b8d-a947-545c73e5a9f7",
            "e86ae365-f79f-4899-91d0-75ac6cdc0a36",
            "82767b06-0946-48c2-a4d7-29f29471a5cd",
            "b85faf4e-dfdb-47e7-86b8-f472882b840f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3710,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cafe5f4f-2d59-412d-98e7-7e439398b03c",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\mouse-action.js",
      "file": "cypress\\e2e\\webdriver-uni\\mouse-action.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91bd5229-f01d-499c-98c9-f57644940b8f",
          "title": "Test mouse actions via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Scroll element into view",
              "fullTitle": "Test mouse actions via webdriveruni Scroll element into view",
              "timedOut": null,
              "duration": 590,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").scrollIntoView().invoke(\"attr\", \"target\", \"_self\").click({ force: true });",
              "err": {},
              "uuid": "b34783ef-019f-40da-8098-9bf047f12edc",
              "parentUUID": "91bd5229-f01d-499c-98c9-f57644940b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to drag and drop a dragable item",
              "fullTitle": "Test mouse actions via webdriveruni I should be able to drag and drop a dragable item",
              "timedOut": null,
              "duration": 1036,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#draggable\").scrollIntoView().trigger(\"mousedown\", { button: 1 });\ncy.get(\"#droppable\").trigger(\"mousemove\", { force: true });",
              "err": {},
              "uuid": "2876384c-04b7-4029-a050-03e46e03bdf7",
              "parentUUID": "91bd5229-f01d-499c-98c9-f57644940b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to perform a double mouse click",
              "fullTitle": "Test mouse actions via webdriveruni I should be able to perform a double mouse click",
              "timedOut": null,
              "duration": 534,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#double-click\").dblclick();",
              "err": {},
              "uuid": "d8e80924-3c63-461e-8e45-a7ba408a5466",
              "parentUUID": "91bd5229-f01d-499c-98c9-f57644940b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to hold down the left mouse button on a given element",
              "fullTitle": "Test mouse actions via webdriveruni I should be able to hold down the left mouse button on a given element",
              "timedOut": null,
              "duration": 421,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#click-box\").trigger(\"mousedown\", { button: 1 }).then(($el) => {\n  expect($el).to.have.css(\"background-color\", \"rgb(0, 255, 0)\");\n});",
              "err": {},
              "uuid": "44c4fb94-aec2-497e-a89e-fdf14c80b489",
              "parentUUID": "91bd5229-f01d-499c-98c9-f57644940b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "I should be able to hover over a specific element and click on first option in dropdown menu",
              "fullTitle": "Test mouse actions via webdriveruni I should be able to hover over a specific element and click on first option in dropdown menu",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#actions\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#div-hover\").contains(\"Hover Over Me Third!\").trigger(\"mouseover\").then((el) => {\n  cy.get(\"#div-hover > div:nth-child(3) > div > a:nth-child(2)\").click({\n    force: true\n  });\n  cy.on(\"window:alert\", (alertMessage) => {\n    expect(alertMessage).to.equal(\"Well done you clicked on the link!\");\n  });\n});",
              "err": {},
              "uuid": "c45e31dd-875b-47f8-9fcb-b413eb2f6f29",
              "parentUUID": "91bd5229-f01d-499c-98c9-f57644940b8f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b34783ef-019f-40da-8098-9bf047f12edc",
            "2876384c-04b7-4029-a050-03e46e03bdf7",
            "d8e80924-3c63-461e-8e45-a7ba408a5466",
            "44c4fb94-aec2-497e-a89e-fdf14c80b489",
            "c45e31dd-875b-47f8-9fcb-b413eb2f6f29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "467f2650-38f3-4ee3-9471-dc4740daaa0f",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\radio-buttons.js",
      "file": "cypress\\e2e\\webdriver-uni\\radio-buttons.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d47164a5-cf62-4b7a-85ce-c2e2ae5d183c",
          "title": "Verify radio buttons via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check specific radio buttons",
              "fullTitle": "Verify radio buttons via webdriveruni Check specific radio buttons",
              "timedOut": null,
              "duration": 1638,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#radio-buttons\").find('input[type=\"radio\"]').first().check();\ncy.get(\"#radio-buttons\").find('input[type=\"radio\"]').eq(2).check();",
              "err": {},
              "uuid": "8a054b40-2f12-4e77-8ca2-77eb481b99ef",
              "parentUUID": "d47164a5-cf62-4b7a-85ce-c2e2ae5d183c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate the state of specific radio buttons",
              "fullTitle": "Verify radio buttons via webdriveruni Validate the state of specific radio buttons",
              "timedOut": null,
              "duration": 984,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[value=\"lettuce\"]').should(\"not.be.checked\");\ncy.get('[value=\"pumpkin\"]').should(\"be.checked\");\ncy.get('[value=\"lettuce\"]').check();\ncy.get('[value=\"lettuce\"]').should(\"be.checked\");\ncy.get('[value=\"pumpkin\"]').should(\"not.be.checked\");\ncy.get('[value=\"cabbage\"]').should(\"be.disabled\");",
              "err": {},
              "uuid": "666317f2-8ea3-418c-9fc7-ff99a706d751",
              "parentUUID": "d47164a5-cf62-4b7a-85ce-c2e2ae5d183c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a054b40-2f12-4e77-8ca2-77eb481b99ef",
            "666317f2-8ea3-418c-9fc7-ff99a706d751"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2622,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f9c112f0-8cf3-4d8b-a11b-886fc3972c3a",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\radio-buttons.js",
      "file": "cypress\\e2e\\webdriver-uni\\radio-buttons.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c650f986-9e9d-4168-acfc-a1a093bb8ad8",
          "title": "Verify radio buttons via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check specific radio buttons",
              "fullTitle": "Verify radio buttons via webdriveruni Check specific radio buttons",
              "timedOut": null,
              "duration": 1497,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#radio-buttons\").find('input[type=\"radio\"]').first().check();\ncy.get(\"#radio-buttons\").find('input[type=\"radio\"]').eq(2).check();",
              "err": {},
              "uuid": "a201b5a0-a54f-494c-b4ef-3e4b0cd51f67",
              "parentUUID": "c650f986-9e9d-4168-acfc-a1a093bb8ad8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate the state of specific radio buttons",
              "fullTitle": "Verify radio buttons via webdriveruni Validate the state of specific radio buttons",
              "timedOut": null,
              "duration": 578,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[value=\"lettuce\"]').should(\"not.be.checked\");\ncy.get('[value=\"pumpkin\"]').should(\"be.checked\");\ncy.get('[value=\"lettuce\"]').check();\ncy.get('[value=\"lettuce\"]').should(\"be.checked\");\ncy.get('[value=\"pumpkin\"]').should(\"not.be.checked\");\ncy.get('[value=\"cabbage\"]').should(\"be.disabled\");",
              "err": {},
              "uuid": "1c25163c-061a-4b20-9d8d-e55dc4491308",
              "parentUUID": "c650f986-9e9d-4168-acfc-a1a093bb8ad8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a201b5a0-a54f-494c-b4ef-3e4b0cd51f67",
            "1c25163c-061a-4b20-9d8d-e55dc4491308"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "479c9694-4908-463b-832b-64124a09fedf",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\select-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\select-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fea3ef1e-a44a-41f4-b81b-32c0f29e5c5e",
          "title": "Interact with dropdown list via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific values via dropdown list",
              "fullTitle": "Interact with dropdown list via webdriveruni Select specific values via dropdown list",
              "timedOut": null,
              "duration": 2681,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#dropdown-checkboxes-radiobuttons\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#dropdowm-menu-1\").select(\"c#\");\ncy.get(\"#dropdowm-menu-2\").select(\"testng\").should(\"have.value\", \"testng\");\ncy.get(\"#dropdowm-menu-3\").select(\"jquery\").contains(\"JQuery\");\ncy.get(\"#dropdowm-menu-2\").select(\"maven\").should(\"have.value\", \"maven\");\ncy.get(\"#dropdowm-menu-2\").select(\"TestNG\").contains(\"TestNG\");",
              "err": {},
              "uuid": "13b8c427-7078-4848-8c37-9e310a8bd268",
              "parentUUID": "fea3ef1e-a44a-41f4-b81b-32c0f29e5c5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13b8c427-7078-4848-8c37-9e310a8bd268"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2681,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2f98e2ec-b636-495a-9ef1-71e9a51cc218",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\select-dropdown-list.js",
      "file": "cypress\\e2e\\webdriver-uni\\select-dropdown-list.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "534a8c5f-2d5d-4773-80fd-4d8bbc3699a7",
          "title": "Interact with dropdown list via webdriveruni",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Select specific values via dropdown list",
              "fullTitle": "Interact with dropdown list via webdriveruni Select specific values via dropdown list",
              "timedOut": null,
              "duration": 1933,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://webdriveruniversity.com\");\ncy.get(\"#dropdown-checkboxes-radiobuttons\").invoke(\"attr\", \"target\", \"_self\").click({ force: true });\ncy.get(\"#dropdowm-menu-1\").select(\"c#\");\ncy.get(\"#dropdowm-menu-2\").select(\"testng\").should(\"have.value\", \"testng\");\ncy.get(\"#dropdowm-menu-3\").select(\"jquery\").contains(\"JQuery\");\ncy.get(\"#dropdowm-menu-2\").select(\"maven\").should(\"have.value\", \"maven\");\ncy.get(\"#dropdowm-menu-2\").select(\"TestNG\").contains(\"TestNG\");",
              "err": {},
              "uuid": "c63e0f98-dcab-43de-b29a-85b872743352",
              "parentUUID": "534a8c5f-2d5d-4773-80fd-4d8bbc3699a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c63e0f98-dcab-43de-b29a-85b872743352"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "026926c1-adc8-499f-9e56-34b752a49dbd",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\traversing-elements.js",
      "file": "cypress\\e2e\\webdriver-uni\\traversing-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09d0c777-a114-435e-8e98-01e0beb197bb",
          "title": "Traversing DOM elements in Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "children() to get the children of DOM elements",
              "fullTitle": "Traversing DOM elements in Cypress children() to get the children of DOM elements",
              "timedOut": null,
              "duration": 1083,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-breadcrumb\").children(\".active\").should(\"contain\", \"Contact Us\");",
              "err": {},
              "uuid": "72d29b32-16f7-4536-91d6-6fb188d7214d",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "closest() to validate the closest ancestor DOM element",
              "fullTitle": "Traversing DOM elements in Cypress closest() to validate the closest ancestor DOM element",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-badge\").closest(\"ul\").should(\"have.class\", \"list-group\");",
              "err": {},
              "uuid": "3a71f059-6c2d-4b9a-810c-dbdb9a7d8f9b",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "eq() to retrieve a specific element based on index",
              "fullTitle": "Traversing DOM elements in Cypress eq() to retrieve a specific element based on index",
              "timedOut": null,
              "duration": 633,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-drinks-list > *\").eq(2).should(\"contain\", \"Milk\");",
              "err": {},
              "uuid": "51f18057-8e4e-4e4b-a437-7a1a7703dd92",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter() to retrieve DOM elements that match a specific selector",
              "fullTitle": "Traversing DOM elements in Cypress filter() to retrieve DOM elements that match a specific selector",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".btn-group-toggle > *\").filter(\".active\").should(\"contain\", \"Button-1\");",
              "err": {},
              "uuid": "a5df45e5-b045-4533-b3d5-500a02383952",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "find() to retrieve DOM elements of a given selector",
              "fullTitle": "Traversing DOM elements in Cypress find() to retrieve DOM elements of a given selector",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-pagination\").find(\"li\").find(\"a\").should(\"have.length\", 7);",
              "err": {},
              "uuid": "11237c66-6627-4a57-989e-236c912e4ca6",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "first() to retrieve the first DOM element within elements ",
              "fullTitle": "Traversing DOM elements in Cypress first() to retrieve the first DOM element within elements ",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-table > tbody > tr > td\").first().should(\"contain\", \"Andy\");",
              "err": {},
              "uuid": "b3343855-5c78-4f54-94be-914cd02ee05e",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "last() to retrieve the last DOM element within elements",
              "fullTitle": "Traversing DOM elements in Cypress last() to retrieve the last DOM element within elements",
              "timedOut": null,
              "duration": 424,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-table > tbody > tr > td\").last().should(\"contain\", \"Scott\");",
              "err": {},
              "uuid": "65dffdfd-c955-4782-b950-454006b7cecc",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "nextAll() to get all of the next sibling DOM elements within elements",
              "fullTitle": "Traversing DOM elements in Cypress nextAll() to get all of the next sibling DOM elements within elements",
              "timedOut": null,
              "duration": 541,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-drinks-list\").contains(\"Tea\").nextAll().should(\"have.length\", \"3\");",
              "err": {},
              "uuid": "cb95f617-8fc0-4a52-a331-fb892f7e4fa6",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "nextUntil() to get all of the next sibling DOM elements within elements until another element",
              "fullTitle": "Traversing DOM elements in Cypress nextUntil() to get all of the next sibling DOM elements within elements until another element",
              "timedOut": null,
              "duration": 981,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#coffee\").nextUntil(\"#sugar\").should(\"contain\", \"Tea\");",
              "err": {},
              "uuid": "c2d631d0-55d9-430d-a27d-205eb41620ab",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "not() to remove DOM element(s) from the set of elements",
              "fullTitle": "Traversing DOM elements in Cypress not() to remove DOM element(s) from the set of elements",
              "timedOut": null,
              "duration": 504,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-button-states > *\").not(\".disabled\").should(\"not.have.class\", \"disabled\");",
              "err": {},
              "uuid": "f51ad57e-2302-4baa-ad93-1edcf4855f42",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "parent() To get parent DOM element of elements",
              "fullTitle": "Traversing DOM elements in Cypress parent() To get parent DOM element of elements",
              "timedOut": null,
              "duration": 579,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-mark\").parent().should(\"contain\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\");",
              "err": {},
              "uuid": "01ca6493-44c0-4814-a516-d972b1670ba7",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "parents() to get parents DOM element of elements",
              "fullTitle": "Traversing DOM elements in Cypress parents() to get parents DOM element of elements",
              "timedOut": null,
              "duration": 516,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-cite\").parents(\"blockquote\");",
              "err": {},
              "uuid": "956c10d7-25cd-42b2-81ec-4c5a21797dc1",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prev() to get the previous sibling DOM element within elements",
              "fullTitle": "Traversing DOM elements in Cypress prev() to get the previous sibling DOM element within elements",
              "timedOut": null,
              "duration": 539,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#sugar\").prev().contains(\"Espresso\");",
              "err": {},
              "uuid": "04bea316-7064-49c9-92a9-2a4efb340ccb",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prevAll() to get all previous sibling DOM elements within elements",
              "fullTitle": "Traversing DOM elements in Cypress prevAll() to get all previous sibling DOM elements within elements",
              "timedOut": null,
              "duration": 540,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".sales\").prevAll().should(\"have.length\", 2);",
              "err": {},
              "uuid": "cd144e41-1cc3-4cc5-ab4d-177eb373efa6",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prevUntil() to get all previous sibling DOM elements within elements until other element",
              "fullTitle": "Traversing DOM elements in Cypress prevUntil() to get all previous sibling DOM elements within elements until other element",
              "timedOut": null,
              "duration": 472,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".list-header\").prevUntil(\"#fruits\").should(\"have.length\", 5);",
              "err": {},
              "uuid": "4b881659-83e6-4acd-a80b-f3a1ffe33a38",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "siblings() To get all sibling DOM elements of elements",
              "fullTitle": "Traversing DOM elements in Cypress siblings() To get all sibling DOM elements of elements",
              "timedOut": null,
              "duration": 546,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-button-other-states .active\").siblings().should(\"have.length\", 3);",
              "err": {},
              "uuid": "bd8d29ed-07b7-48d2-bc64-c68cea8ef97d",
              "parentUUID": "09d0c777-a114-435e-8e98-01e0beb197bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72d29b32-16f7-4536-91d6-6fb188d7214d",
            "3a71f059-6c2d-4b9a-810c-dbdb9a7d8f9b",
            "51f18057-8e4e-4e4b-a437-7a1a7703dd92",
            "a5df45e5-b045-4533-b3d5-500a02383952",
            "11237c66-6627-4a57-989e-236c912e4ca6",
            "b3343855-5c78-4f54-94be-914cd02ee05e",
            "65dffdfd-c955-4782-b950-454006b7cecc",
            "cb95f617-8fc0-4a52-a331-fb892f7e4fa6",
            "c2d631d0-55d9-430d-a27d-205eb41620ab",
            "f51ad57e-2302-4baa-ad93-1edcf4855f42",
            "01ca6493-44c0-4814-a516-d972b1670ba7",
            "956c10d7-25cd-42b2-81ec-4c5a21797dc1",
            "04bea316-7064-49c9-92a9-2a4efb340ccb",
            "cd144e41-1cc3-4cc5-ab4d-177eb373efa6",
            "4b881659-83e6-4acd-a80b-f3a1ffe33a38",
            "bd8d29ed-07b7-48d2-bc64-c68cea8ef97d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "936f5ffe-c56a-48ac-a445-89564bfd0b6b",
      "title": "",
      "fullFile": "cypress\\e2e\\webdriver-uni\\traversing-elements.js",
      "file": "cypress\\e2e\\webdriver-uni\\traversing-elements.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e45bf950-1400-45c9-8b07-7ead949d507c",
          "title": "Traversing DOM elements in Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "children() to get the children of DOM elements",
              "fullTitle": "Traversing DOM elements in Cypress children() to get the children of DOM elements",
              "timedOut": null,
              "duration": 1496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-breadcrumb\").children(\".active\").should(\"contain\", \"Contact Us\");",
              "err": {},
              "uuid": "1f59b645-2aa8-405b-9b21-3e0b0821dc36",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "closest() to validate the closest ancestor DOM element",
              "fullTitle": "Traversing DOM elements in Cypress closest() to validate the closest ancestor DOM element",
              "timedOut": null,
              "duration": 561,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-badge\").closest(\"ul\").should(\"have.class\", \"list-group\");",
              "err": {},
              "uuid": "371a626a-1063-45d7-b74f-7fe04ca5cf51",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "eq() to retrieve a specific element based on index",
              "fullTitle": "Traversing DOM elements in Cypress eq() to retrieve a specific element based on index",
              "timedOut": null,
              "duration": 505,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-drinks-list > *\").eq(2).should(\"contain\", \"Milk\");",
              "err": {},
              "uuid": "639479cb-f1ca-466e-ace9-ba2c02a02dfd",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "filter() to retrieve DOM elements that match a specific selector",
              "fullTitle": "Traversing DOM elements in Cypress filter() to retrieve DOM elements that match a specific selector",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".btn-group-toggle > *\").filter(\".active\").should(\"contain\", \"Button-1\");",
              "err": {},
              "uuid": "732bd90b-600d-4934-814c-4fbacf6c4227",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "find() to retrieve DOM elements of a given selector",
              "fullTitle": "Traversing DOM elements in Cypress find() to retrieve DOM elements of a given selector",
              "timedOut": null,
              "duration": 594,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-pagination\").find(\"li\").find(\"a\").should(\"have.length\", 7);",
              "err": {},
              "uuid": "138d1ad8-c692-4d04-a87b-65d75bf7349d",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "first() to retrieve the first DOM element within elements ",
              "fullTitle": "Traversing DOM elements in Cypress first() to retrieve the first DOM element within elements ",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-table > tbody > tr > td\").first().should(\"contain\", \"Andy\");",
              "err": {},
              "uuid": "44ad35eb-0da7-448c-90a7-c92196eab3ba",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "last() to retrieve the last DOM element within elements",
              "fullTitle": "Traversing DOM elements in Cypress last() to retrieve the last DOM element within elements",
              "timedOut": null,
              "duration": 488,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-table > tbody > tr > td\").last().should(\"contain\", \"Scott\");",
              "err": {},
              "uuid": "cc75fa1d-31f3-468c-8d62-b39a959bc425",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "nextAll() to get all of the next sibling DOM elements within elements",
              "fullTitle": "Traversing DOM elements in Cypress nextAll() to get all of the next sibling DOM elements within elements",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-drinks-list\").contains(\"Tea\").nextAll().should(\"have.length\", \"3\");",
              "err": {},
              "uuid": "cad31650-b97d-4182-99e1-4ba37accd29a",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "nextUntil() to get all of the next sibling DOM elements within elements until another element",
              "fullTitle": "Traversing DOM elements in Cypress nextUntil() to get all of the next sibling DOM elements within elements until another element",
              "timedOut": null,
              "duration": 516,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#coffee\").nextUntil(\"#sugar\").should(\"contain\", \"Tea\");",
              "err": {},
              "uuid": "4cc52a17-340b-4325-9e09-9ef103bc3d58",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "not() to remove DOM element(s) from the set of elements",
              "fullTitle": "Traversing DOM elements in Cypress not() to remove DOM element(s) from the set of elements",
              "timedOut": null,
              "duration": 477,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-button-states > *\").not(\".disabled\").should(\"not.have.class\", \"disabled\");",
              "err": {},
              "uuid": "4703616c-c87c-4dfe-8e1a-885f98fa4449",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "parent() To get parent DOM element of elements",
              "fullTitle": "Traversing DOM elements in Cypress parent() To get parent DOM element of elements",
              "timedOut": null,
              "duration": 458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-mark\").parent().should(\"contain\", \"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\");",
              "err": {},
              "uuid": "73f0b6be-4e46-4410-935c-d5e1bcd1d6f8",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "parents() to get parents DOM element of elements",
              "fullTitle": "Traversing DOM elements in Cypress parents() to get parents DOM element of elements",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-cite\").parents(\"blockquote\");",
              "err": {},
              "uuid": "6015b54f-e848-4492-84e2-5a8363b264d3",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prev() to get the previous sibling DOM element within elements",
              "fullTitle": "Traversing DOM elements in Cypress prev() to get the previous sibling DOM element within elements",
              "timedOut": null,
              "duration": 458,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"#sugar\").prev().contains(\"Espresso\");",
              "err": {},
              "uuid": "a633857b-aad8-4a8d-8d9e-b7144f308690",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prevAll() to get all previous sibling DOM elements within elements",
              "fullTitle": "Traversing DOM elements in Cypress prevAll() to get all previous sibling DOM elements within elements",
              "timedOut": null,
              "duration": 483,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".sales\").prevAll().should(\"have.length\", 2);",
              "err": {},
              "uuid": "d4681952-1203-410c-af14-224229d8cc2e",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "prevUntil() to get all previous sibling DOM elements within elements until other element",
              "fullTitle": "Traversing DOM elements in Cypress prevUntil() to get all previous sibling DOM elements within elements until other element",
              "timedOut": null,
              "duration": 423,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".list-header\").prevUntil(\"#fruits\").should(\"have.length\", 5);",
              "err": {},
              "uuid": "6408db73-9f4d-4420-95c3-825f6072e45a",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "siblings() To get all sibling DOM elements of elements",
              "fullTitle": "Traversing DOM elements in Cypress siblings() To get all sibling DOM elements of elements",
              "timedOut": null,
              "duration": 1147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".traversal-button-other-states .active\").siblings().should(\"have.length\", 3);",
              "err": {},
              "uuid": "3ead7b66-5e4f-435a-b83e-bd80d8eac680",
              "parentUUID": "e45bf950-1400-45c9-8b07-7ead949d507c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f59b645-2aa8-405b-9b21-3e0b0821dc36",
            "371a626a-1063-45d7-b74f-7fe04ca5cf51",
            "639479cb-f1ca-466e-ace9-ba2c02a02dfd",
            "732bd90b-600d-4934-814c-4fbacf6c4227",
            "138d1ad8-c692-4d04-a87b-65d75bf7349d",
            "44ad35eb-0da7-448c-90a7-c92196eab3ba",
            "cc75fa1d-31f3-468c-8d62-b39a959bc425",
            "cad31650-b97d-4182-99e1-4ba37accd29a",
            "4cc52a17-340b-4325-9e09-9ef103bc3d58",
            "4703616c-c87c-4dfe-8e1a-885f98fa4449",
            "73f0b6be-4e46-4410-935c-d5e1bcd1d6f8",
            "6015b54f-e848-4492-84e2-5a8363b264d3",
            "a633857b-aad8-4a8d-8d9e-b7144f308690",
            "d4681952-1203-410c-af14-224229d8cc2e",
            "6408db73-9f4d-4420-95c3-825f6072e45a",
            "3ead7b66-5e4f-435a-b83e-bd80d8eac680"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9645,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}